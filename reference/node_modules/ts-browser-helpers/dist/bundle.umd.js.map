{"version":3,"file":"bundle.umd.js","sources":["../src/EventDispatcher.ts","../src/time.ts","../src/PointerDragHelper.ts","../src/JSUndoManager.ts","../src/damper.ts","../src/dom.ts","../src/arrayBuffer.ts","../src/text.ts","../src/template-literals.ts","../src/styles.ts","../src/browser.ts","../src/color.ts","../src/obj-property.ts","../src/misc.ts","../src/object.ts","../src/serialization.ts","../src/fnCaller.ts","../src/decorators.ts","../src/encryption.ts","../src/fs-api.ts","../src/image.ts","../src/svg.ts","../src/htmlToImage.ts","../src/math.ts","../src/url.ts"],"sourcesContent":["/**\n * A simple event interface with typed event types.\n */\nexport interface IEvent<T> {\n    type: T;\n    target?: any;\n    [attachment: string]: any;\n}\n\n/**\n * A simple event dispatcher interface with {@link IEvent} as event type.\n */\nexport interface IEventDispatcher<T> {\n\n    /**\n     * Adds a listener to an event type.\n     * @param type The type of event to listen to.\n     * @param listener The function that gets called when the event is fired.\n     */\n    addEventListener(type: T, listener: (event: IEvent<T>) => void): void;\n\n    /**\n     * Checks if listener is added to an event type.\n     * @param type The type of event to listen to.\n     * @param listener The function that gets called when the event is fired.\n     */\n    hasEventListener(type: T, listener: (event: IEvent<T>) => void): boolean;\n\n    /**\n     * Removes a listener from an event type.\n     * @param type The type of the listener that gets removed.\n     * @param listener The listener function that gets removed.\n     */\n    removeEventListener(type: T, listener: (event: IEvent<T>) => void): void;\n\n    /**\n     * Fire an event type.\n     * @param event.type The type of event that gets fired.\n     */\n    dispatchEvent(event: IEvent<T>): void;\n}\n\n/**\n * A simple event dispatcher with typed event types, see {@link IEventDispatcher}.\n */\nexport class SimpleEventDispatcher<T extends string> implements IEventDispatcher<T> {\n\n    constructor() {\n        this.dispatchEvent = this.dispatchEvent.bind(this)\n        this.addEventListener = this.addEventListener.bind(this)\n        this.removeEventListener = this.removeEventListener.bind(this)\n        this.hasEventListener = this.hasEventListener.bind(this)\n    }\n\n    private _eventListeners: Record<string, ((event: IEvent<T>) => void)[]> = {}\n\n    addEventListener(type: T, listener: (event: IEvent<T>) => void): void {\n\n        const listeners = this._eventListeners\n        if (listeners[ type ] === undefined) listeners[type] = []\n        if (!listeners[ type ].includes(listener)) listeners[type].push(listener)\n\n    }\n\n    hasEventListener(type: T, listener: (event: IEvent<T>) => void): boolean {\n\n        const listeners = this._eventListeners\n        return listeners[ type ] !== undefined && listeners[ type ].includes(listener)\n\n    }\n\n    removeEventListener(type: T, listener: (event: IEvent<T>) => void): void {\n\n        const listeners = this._eventListeners\n        const listenerArray = listeners[ type ]\n        if (listenerArray !== undefined) {\n            const index = listenerArray.indexOf(listener)\n            if (index !== -1) listenerArray.splice(index, 1)\n        }\n\n    }\n\n    dispatchEvent(event: IEvent<T>): void {\n\n        const listeners = this._eventListeners\n        const listenerArray = listeners[ event.type ]\n\n        if (listenerArray !== undefined) {\n            event.target = this\n            // Make a copy, in case listeners are removed while iterating.\n            const array = listenerArray.slice(0)\n            for (let i = 0, l = array.length; i < l; i++) array[i].call(this, event)\n\n        }\n\n    }\n\n}\n","/**\n * Returns a promise that resolves after the given duration. Basically a setTimeout that returns a promise.\n * @param duration - in ms\n *\n * @category Time\n */\nexport async function timeout(duration: number) {\n    return new Promise(resolve => setTimeout(resolve, Math.max(0, duration)))\n}\n\n/**\n * Returns the current time in milliseconds. If performance.now() is available, it is used, otherwise Date.now() is used.\n *\n * @category Time\n */\nexport function now(): number { // in milliseconds\n    return (typeof performance === 'undefined' ? Date : performance).now() // see threejs  #10732\n}\n","import {SimpleEventDispatcher} from \"./EventDispatcher\";\nimport {now} from \"./time\";\nimport {IDisposable} from \"./types\";\n\n/**\n * A helper class to handle pointer events and dispatch drag events: `drag`, `dragStart` and `dragEnd` with NDC coordinates and time.\n *\n * To use, create an object of the class, set `element` with the HTML element(like canvas) and add event listeners to drag events.\n *\n * @example\n * ```ts\n * const pointerDragHelper = new PointerDragHelper()\n * pointerDragHelper.element = canvas\n * pointerDragHelper.addEventListener('dragStart', (e) => {\n *    console.log('dragStart', e.pointer)\n *    // {x: -0.5, y: 0.5, time: 123456789}\n *    // x and y are NDC coordinates, time is the time when the event is fired.\n *    // x and y are in the range of [-1, 1].\n *    // x is left to right, y is bottom to top.\n *    // time is in milliseconds.\n * })\n * pointerDragHelper.addEventListener('drag', (e) => {\n *   console.log('drag', e.pointer)\n *   // {x: -0.5, y: 0.5, time: 123456789}\n * })\n * pointerDragHelper.addEventListener('dragEnd', (e) => {\n *  console.log('dragEnd', e.pointer)\n *  // {x: -0.5, y: 0.5, time: 123456789}\n * })\n * ```\n */\nexport class PointerDragHelper extends SimpleEventDispatcher<'dragStart' | 'drag' | 'dragEnd'> implements IDisposable{\n    private _pointerDown?: {x: number, y: number, time: number}\n    private _pointer?: {x: number, y: number, time: number}\n    private _pointerUp?: {x: number, y: number, time: number}\n\n    get element(): HTMLElement | undefined {\n        return this._element\n    }\n\n    set element(value: HTMLElement | undefined) {\n        if (this._element === value) return\n        if (this._element) this._removeElement()\n        this._element = value\n        if (this._element) this._addElement()\n    }\n\n    private _element?: HTMLElement\n\n    private _removeElement() {\n        this._element?.removeEventListener('pointerdown', this._onPointerDown)\n        this._element?.removeEventListener('pointermove', this._onPointerMove)\n        this._element?.removeEventListener('pointerup', this._onPointerUp)\n        this._element?.removeEventListener('pointercancel', this._onPointerUp)\n        this._element?.removeEventListener('pointerout', this._onPointerUp)\n    }\n\n    private _addElement() {\n        this._element?.addEventListener('pointerdown', this._onPointerDown)\n        this._element?.addEventListener('pointermove', this._onPointerMove)\n        this._element?.addEventListener('pointerup', this._onPointerUp)\n        this._element?.addEventListener('pointercancel', this._onPointerUp)\n        this._element?.addEventListener('pointerout', this._onPointerUp)\n    }\n\n    private _onPointerDown = (e: PointerEvent) => {\n        if (e.button !== 0) return\n        if (!this._element) return\n        this._pointerUp = undefined\n        const x = e.clientX / this._element!.clientWidth * 2 - 1\n        const y = -(e.clientY / this._element!.clientHeight) * 2 + 1\n        const time = now()\n        this._pointerDown = {x, y, time}\n        this._pointer = this._pointerDown\n        this.dispatchEvent({type: 'dragStart', pointer: this._pointerDown})\n    }\n    private _onPointerMove = (e: PointerEvent) => {\n        if (!this._pointerDown || !this._pointer) return\n        if (!this._element) return\n        const x = e.clientX / this._element!.clientWidth * 2 - 1\n        const y = -(e.clientY / this._element!.clientHeight) * 2 + 1\n        const time = now()\n        this.dispatchEvent({\n            type: 'drag', pointer: this._pointer,\n            drag: {x: x - this._pointerDown.x, y: y - this._pointerDown.y, time: time - this._pointerDown.time},\n            delta: {x: x - this._pointer.x, y: y - this._pointer.y, time: time - this._pointer.time},\n        })\n        this._pointer = {x: x, y: y, time: now()}\n\n        if (e.buttons % 2 === 0) this._onPointerUp(e)\n    }\n    private _onPointerUp = (e: PointerEvent) => {\n        if (e.button !== 0) return\n        if (!this._pointerDown) return\n        if (!this._element) return\n        const x = e.clientX / this._element!.clientWidth * 2 - 1\n        const y = -(e.clientY / this._element!.clientHeight) * 2 + 1\n        const time = now()\n        this._pointerUp = {x: x, y: y, time}\n        this.dispatchEvent({\n            type: 'dragEnd', pointer: this._pointerUp,\n            drag: {\n                x: this._pointerUp.x - this._pointerDown.x,\n                y: this._pointerUp.y - this._pointerDown.y,\n                time: this._pointerUp.time - this._pointerDown.time,\n            },\n        })\n        this._pointerDown = undefined\n        this._pointer = undefined\n    }\n\n    dispose() {\n        this.element = undefined\n    }\n}\n","/*!\n * Fork Of -\n * JavaScript Undo Manager 1.0.0\n * Simple JavaScript undo/redo command manager supporting transactions with no dependencies.\n *\n * Copyright: Alexey Grinko, 2017\n * Git repository: https://github.com/agrinko/js-undo-manager.git\n *\n * @license MIT - https://opensource.org/licenses/MIT\n *\n * Changes -\n * 1. Added presets commands\n * 2. Port to TypeScript\n * 3. Remove transactions\n */\n\n/////////// SOURCE CODE ///////////////\n\nexport interface JSUndoManagerOptions{\n    limit: number;\n    debug: boolean;\n    bindHotKeys: boolean;\n    hotKeyRoot?: HTMLElement;\n    // useTransactions: boolean;\n}\nexport type JSUndoManagerCommand1 = {\n    redo: Function;\n    undo: Function;\n}\nexport type JSUndoManagerCommand2 = {\n    type: string,\n    // [key: string]: any\n}\nexport type JSUndoManagerCommand = JSUndoManagerCommand1 | JSUndoManagerCommand2\n\n/**\n * Main class\n * @class JSUndoManager\n */\nexport class JSUndoManager {\n    limit: number;\n    options: JSUndoManagerOptions = {\n        limit: 500,             // maximum commands stack size\n        debug: false,           // whether to emit execution status in console\n        bindHotKeys: false,     // whether to bind \"undo\" and \"redo\" commands to \"Ctrl+Z\", \"Ctrl+Y\" & \"Ctrl+Shift+Z\" hot keys\n        // useTransactions: true   // whether to initialize transactions manager\n    }\n    enabled = true;\n    stack: JSUndoManagerCommand[];\n    sp: number;\n    // transaction: TransactionManager;\n    presets: Record<string, (c: JSUndoManagerCommand2)=>JSUndoManagerCommand1> = {}\n\n    constructor(options: JSUndoManagerOptions) {\n        Object.assign(this.options, options);\n\n        this.limit = options.limit;\n        this.options = options;\n        this.reset();\n\n        // if (options.useTransactions) {\n        //     this.transaction = new TransactionManager(this);\n        // }\n        if (options.bindHotKeys) {\n            this.bindHotKeys();\n        }\n\n        this.log(`Initialized with stack limit of ${this.limit} commands`);\n    }\n\n    /**\n     * Bind 'undo' and 'redo' actions to 'Ctrl/Cmd+Z', 'Ctrl+Y' & 'Ctrl/Cmd+Shift+Z' hot keys.\n     * It is a basic implementation for quick testing and should be replaced with custom event handlers\n     * for more flexible processing.\n     * @returns {JSUndoManager}\n     */\n    bindHotKeys() {\n        this.log(\"Bound 'undo' and 'redo' actions to 'Ctrl/Cmd+Z', 'Ctrl+Y' & 'Ctrl/Cmd+Shift+Z' hot keys\");\n\n        const elem = this.options.hotKeyRoot??document\n        elem.addEventListener(\"keydown\", this._keyDown);\n\n        return this;\n    }\n\n    dispose() {\n        const elem = this.options.hotKeyRoot??document\n        elem.removeEventListener(\"keydown\", this._keyDown);\n        return this.reset()\n    }\n\n    private _keyDown = (e: KeyboardEvent) => {\n        if(!this.enabled) return\n        const ctrlKey = e.ctrlKey || e.metaKey;\n        if (e.code === 'KeyZ' && ctrlKey && !e.shiftKey) {\n            this.undo();\n        } else if ((e.code === 'KeyZ' && ctrlKey && e.shiftKey) || (e.code === 'KeyY' && e.ctrlKey)) {\n            this.redo();\n        }\n    }\n\n    /**\n     * Remember executed command containing \"redo\" and \"undo\" functions\n     * @param {Object|Function} command - either an object with \"redo\" and \"undo\" functions\n     * @returns {JSUndoManager}\n     */\n    record(command: JSUndoManagerCommand): this {\n        if(!this.enabled) return this\n        this._record(command);\n        return this;\n    }\n\n    replaceLast(command: JSUndoManagerCommand) {\n        const last = this.peek()\n        if(!last) return\n\n        this.log('replace', last, 'with', command)\n\n        this.stack[this.sp] = command\n\n        return this\n    }\n\n    /**\n     * Execute function and record it with its opposite \"undo\" function\n     * @param {Object|Function} command - either an object with \"redo\" and \"undo\" functions\n     * @param {Function} [undo] - \"undo\" function, used if the first argument is also a function\n     * @returns {JSUndoManager}\n     */\n    execute(command: JSUndoManagerCommand) {\n        if(!this.enabled) return\n\n        let command1 = this._rc(command);\n        let doFunction = command1.redo;\n\n        this.record.apply(this, command1);\n\n        this.log(\"Executing function...\");\n        doFunction.apply(command);\n\n        return this;\n    }\n\n    _rc(command: JSUndoManagerCommand1 | JSUndoManagerCommand2) {\n        if ((command as JSUndoManagerCommand2).type) {\n            const p = this.presets[(command as JSUndoManagerCommand2).type]\n            if (typeof p === 'function') {\n                return p((command as JSUndoManagerCommand2))\n            } else {\n                console.error(command, p, this.presets)\n                throw new Error(`Preset command not found`)\n            }\n        } else\n            return command as JSUndoManagerCommand1\n    }\n\n    _record(command: JSUndoManagerCommand) {\n        if(!this.enabled) return\n        // if (this.transaction.isInProgress())\n        //     return this.transaction._record(command);\n\n        this.log(\"Recording command\", command);\n\n        this._rebase();\n\n        this.stack.push(command);\n        this.sp++;\n\n        this._keepLimit();\n    }\n\n    //forget \"future\" commands if stack pointer is not at the end\n    _rebase() {\n        if (this.canRedo())\n            this.stack.length = this.sp + 1;\n    }\n\n    //sustain limited size of stack; cut extra commands starting with the latest ones\n    _keepLimit() {\n        if (this.stack.length <= this.limit)\n            return;\n\n        let exceedsBy = this.stack.length - this.limit;\n\n        this.log(\"Stack size reached its limit: ${this.limit} commands. Cutting off most old commands...\");\n\n        if (exceedsBy === 1)\n            this.stack.shift(); //this is the most common case, so using \"shift\" will increase performance a bit\n        else\n            this.stack.splice(0, exceedsBy);\n\n        this.sp -= exceedsBy; //normalize stack pointer for the new stack length\n    }\n\n    /**\n     * Undo previous command if possible\n     * @returns {JSUndoManager}\n     */\n    undo() {\n        if (!this.canUndo())\n            return this;\n\n        let command = this.stack[this.sp];\n\n        this.log(\"undo\");\n\n        this.sp--;\n\n        this._rc(command).undo();\n\n        return this;\n    }\n\n    /**\n     * Check whether undoing previous command is possible\n     * @returns {boolean}\n     */\n    canUndo() {\n        return this.sp >= 0 && this.enabled;\n    }\n\n    /**\n     * Get the last command that was done\n     */\n    peek() {\n        return this.canUndo() ? this.stack[this.sp] : null\n    }\n\n    /**\n     * Redo the command which was previously undone\n     * @returns {JSUndoManager}\n     */\n    redo() {\n        if (!this.canRedo())\n            return this;\n\n        let command = this.stack[this.sp + 1]; //execute next command after stack pointer\n\n        this.log(\"redo\");\n\n        this.sp++;\n\n        this._rc(command).redo();\n\n        return this;\n    }\n\n    /**\n     * Check whether redoing command is possible\n     * @returns {boolean}\n     */\n    canRedo() {\n        return this.sp < this.stack.length - 1 && this.enabled; //if stack pointer is not at the end\n    }\n\n    /**\n     * Gets the last command that was undone\n     */\n    peekForward() {\n        return this.canRedo() ? this.stack[this.sp + 1] : null\n    }\n\n    /**\n     * Change stack size limit initially defined in the constructor options\n     * @param {number} limit\n     */\n    setLimit(limit: number) {\n        let redoable = this.stack.length - this.sp - 1;\n\n        if (limit < 1 || !(typeof limit === \"number\"))\n            throw new TypeError(`JSUndoManager.setLimit(): unexpected argument limit=${limit}. Should be a positive number`);\n\n        if (limit < redoable) {\n            console.warn(`JSUndoManager.setLimit(): cannot set stack limit (${limit}) less than the number of 'redoable' commands (${redoable})`);\n        } else {\n            this.limit = Math.floor(limit);\n            this._keepLimit();\n        }\n\n        return this;\n    }\n\n    /**\n     * Reset all commands from memory\n     */\n    reset() {\n        this.log(\"reset\");\n        this.stack = [];\n        this.sp = -1;\n        return this;\n    }\n\n    /**\n     * Check whether the commands stack is empty\n     * @returns {boolean}\n     */\n    isEmpty() {\n        return !this.stack.length;\n    }\n\n    /**\n     * Check whether the commands stack size reaches its limit\n     * @returns {boolean}\n     */\n    isFull() {\n        return this.stack.length === this.limit;\n    }\n\n    /**\n     * Get number of commands in memory stack\n     * @returns {Number}\n     */\n    getSize() {\n        return this.stack.length;\n    }\n\n    log(msg: string, ...args: any[]) {\n        if (this.options.debug)\n            console.log(`Command Manager: ${msg}`, ...args);\n    }\n}\n\n// /**\n//  * Transaction manager helper.\n//  * Allows working with transactions from JSUndoManager. Requires its instance as a constructor's parameter.\n//  * @class TransactionManager\n//  */\n// class TransactionManager {\n//     static _execForward(sequence) {\n//         for (let i = 0; i < sequence.length; i++)\n//             sequence[i].redo();\n//     }\n//\n//     static _execBack(sequence) {\n//         for (let i = sequence.length - 1; i >= 0; i--)\n//             sequence[i].undo();\n//     }\n//\n//     constructor(tracker) {\n//         this.tracker = tracker;\n//         this._reset();\n//\n//         tracker.log(\"TransactionManager is initialized\");\n//     }\n//\n//     begin() {\n//         this.state = TransactionManager.IN_PROGRESS;\n//         this.tracker.log(\"Begin transaction\");\n//     }\n//\n//     end() {\n//         let seq = this.sequence;\n//\n//         this._reset();\n//\n//         if (seq.length > 0) {\n//             this.tracker.record({\n//                 redo: TransactionManager._execForward.bind(null, seq),\n//                 undo: TransactionManager._execBack.bind(null, seq)\n//             });\n//         }\n//\n//         this.tracker.log(\"End transaction\");\n//     }\n//\n//     cancel() {\n//         TransactionManager._execBack(this.sequence);\n//         this._reset();\n//\n//         this.tracker.log(\"Cancel transaction\");\n//     }\n//\n//     isInProgress() {\n//         return this.state === TransactionManager.IN_PROGRESS;\n//     }\n//\n//     isPending() {\n//         return this.state === TransactionManager.PENDING;\n//     }\n//\n//     _record(command) {\n//         this.sequence.push(command);\n//         this.tracker.log(\"Recording command in transaction...\", command);\n//     }\n//\n//     _reset() {\n//         this.state = TransactionManager.PENDING;\n//         this.sequence = [];\n//     }\n// }\n//\n// TransactionManager.PENDING = 0;\n// TransactionManager.IN_PROGRESS = 1;\n//\n// /////////// SOURCE CODE END ///////////////\n//\n// // HELPER FUNCTIONS\n// /**\n//  * Emulate ES6 Object.assign behaviour if native function is not defined\n//  */\n// let assign = Object.assign || function (target) {\n//     for (let i = 1; i < arguments.length; i++) {\n//         for (let key in arguments[i]) {\n//             if (arguments[i].hasOwnProperty(key)) {\n//                 target[key] = arguments[i][key];\n//             }\n//         }\n//     }\n//\n//     return target;\n// };\n","/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Damper class is a generic second-order critically damped system that does\n * one linear step of the desired length of time. The only parameter is\n * DECAY_MILLISECONDS. This common parameter makes all states converge at the\n * same rate regardless of scale. xNormalization is a number to provide the\n * rough scale of x, such that NIL_SPEED clamping also happens at roughly the\n * same convergence for all states.\n *\n * Taken from Google model-viewer.\n *\n * https://github.com/google/model-viewer/blob/ec527bc1d0e1bcb4421fa192a7e62bbc5764db91/packages/model-viewer/src/three-components/Damper.ts#L1\n */\nexport class Damper {\n    static readonly SETTLING_TIME = 10000;  // plenty long enough\n    static readonly MIN_DECAY_MILLISECONDS = 0.001;\n    static readonly DECAY_MILLISECONDS = 50;\n\n    private velocity: number = 0;\n    private naturalFrequency: number = 0;\n\n    constructor(decayMilliseconds: number = Damper.DECAY_MILLISECONDS) {\n        this.setDecayTime(decayMilliseconds);\n    }\n\n    setDecayTime(decayMilliseconds: number) {\n        this.naturalFrequency =\n            1 / Math.max(Damper.MIN_DECAY_MILLISECONDS, decayMilliseconds);\n    }\n\n    update(\n        v: number,\n        vGoal: number,\n        timeStepMilliseconds: number,\n        xNormalization: number,\n    ): number {\n        const nilSpeed = 0.0002 * this.naturalFrequency;\n\n        if (v == null || xNormalization === 0) {\n            return vGoal;\n        }\n        if (v === vGoal && this.velocity === 0) {\n            return vGoal;\n        }\n        if (timeStepMilliseconds < 0) {\n            return v;\n        }\n        // Exact solution to a critically damped second-order system, where:\n        // acceleration = this.naturalFrequency * this.naturalFrequency * (vGoal\n        // - v) - 2 * this.naturalFrequency * this.velocity;\n        const deltaV = (v - vGoal);\n        const intermediateVelocity = this.velocity + this.naturalFrequency * deltaV;\n        const intermediateX = deltaV + timeStepMilliseconds * intermediateVelocity;\n        const decay = Math.exp(-this.naturalFrequency * timeStepMilliseconds);\n        const newVelocity =\n            (intermediateVelocity - this.naturalFrequency * intermediateX) * decay;\n        const acceleration =\n            -this.naturalFrequency * (newVelocity + intermediateVelocity * decay);\n        if (Math.abs(newVelocity) < nilSpeed * Math.abs(xNormalization) &&\n            acceleration * deltaV >= 0) {\n            // This ensures the controls settle and stop calling this function instead\n            // of asymptotically approaching their goal.\n            this.velocity = 0;\n            return vGoal;\n        } else {\n            this.velocity = newVelocity;\n            return vGoal + intermediateX * decay;\n        }\n    }\n}\n","/**\n * Creates a HTML canvas element.\n * @category DOM\n */\nexport function createCanvasElement(): HTMLCanvasElement {\n    const canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas') as HTMLCanvasElement\n    canvas.style.display = 'block'\n    return canvas\n}\n\n/**\n * Creates an HTML div element.\n * @param innerHTML - HTML string to add to the div\n * @param id - id of the div\n * @param classList - list of classes to add to the div\n * @param addToBody - add the div to the body\n * @param elementTag - tag of the element to create (default: div)\n *\n * @category DOM\n */\nexport function createDiv<T extends keyof HTMLElementTagNameMap = 'div'>({innerHTML = '', id, classList, addToBody = true, elementTag = <T>'div'}: {innerHTML?: string, id?: string, classList?: string[], addToBody?:boolean, elementTag?: T}): HTMLElementTagNameMap[T] {\n    const elem = document.createElement(elementTag)\n    if (id) elem.id = id\n    elem.innerHTML = innerHTML\n    if (classList) elem.classList.add(...classList)\n    if (addToBody) document.body.appendChild(elem)\n    return elem\n}\n\n/**\n * Creates a HTML image element from a url.\n * @param url - url of the image\n *\n * @category DOM\n */\nexport async function createImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image()\n        img.onload = () => resolve(img)\n        img.onerror = reject\n        img.crossOrigin = 'anonymous'\n        img.decoding = 'sync'\n        img.src = url\n    })\n}\n\n/**\n * Creates a HTML style element with the given styles.\n * @param styles - CSS string\n * @param root - root element to add the style to (default: head)\n *\n * @category DOM\n */\nexport function createStyles(styles: string, root: Element|undefined = document.head) {\n    const styleSheet = document.createElement('style')\n    styleSheet.type = 'text/css'\n    styleSheet.innerText = styles\n    root?.appendChild(styleSheet)\n    return styleSheet\n}\n\n/**\n * Creates a HTML script element from a url.\n * @param url - url of the script\n * @param root - root element to add the script to (default: head)\n *\n * @category DOM\n */\nexport async function createScriptFromURL(url: string, root = document.head): Promise<HTMLScriptElement> {\n    return new Promise<HTMLScriptElement>((resolve, reject) => {\n        const s = document.createElement('script')\n\n        s.setAttribute('src', url)\n        s.addEventListener('load', ()=>resolve(s))\n        s.addEventListener('error', reject)\n\n        root.appendChild(s)\n    })\n}\n\n\n/**\n * Sets the innerHTML of an element and recreates all script tags so they are executed.\n * @param element - element to set the innerHTML of\n * @param html - innerHTML string to set\n */\nexport async function setInnerHTMLWithScripts(element: HTMLElement, html: string) {\n    element.innerHTML = html\n    const scripts = element.getElementsByTagName('script')\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i]\n        const newScript = cloneScriptTag(script)\n        let err = false\n        await new Promise(resolve => {\n            newScript.onload = resolve\n            newScript.onerror = () => {\n                err = true\n                resolve(undefined)\n            }\n        })\n        if (err) continue\n        script.parentNode?.replaceChild(newScript, script)\n    }\n}\n\n/**\n * Clones a script tag.\n * @param script - script tag to clone\n * @param newScript - optional new script tag to clone into. If not provided a new script tag will be created.\n */\nexport function cloneScriptTag(script: HTMLScriptElement, newScript?: HTMLScriptElement) {\n    newScript = newScript ?? document.createElement('script')\n    newScript.type = script.type || 'text/javascript'\n    newScript.text = script.text\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let j = 0; j < script.attributes.length; j++) {\n        const attr = script.attributes[ j ]\n        newScript.setAttribute(attr.name, attr.value)\n    }\n    return newScript\n}\n","/**\n * Convert an ArrayBuffer to Base64 string\n * @param buffer - ArrayBuffer to convert\n * @category ArrayBuffer\n */\nexport function arrayBufferToBase64(buffer: ArrayBuffer) {\n    if (!window) {\n        console.warn('window is required')\n        return ''\n    }\n    let binary = ''\n    const bytes = new Uint8Array(buffer)\n    const len = bytes.byteLength\n    for (let i = 0; i < len; i++) {\n        binary += String.fromCharCode(bytes[ i ])\n    }\n    return window.btoa(binary)\n}\n\n/**\n * Convert a Base64 string to ArrayBuffer\n * @param base64 - Base64 string to convert\n * @category ArrayBuffer\n */\nexport function base64ToArrayBuffer(base64: string) {\n    if (!window) {\n        console.warn('window is required')\n        return new Uint8Array(0)\n    }\n    const binaryString = window.atob(base64)\n    const len = binaryString.length\n    const bytes = new Uint8Array(len)\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binaryString.charCodeAt(i)\n    }\n    return bytes.buffer\n}\n\n// if (!ArrayBuffer.prototype.slice)\n//     ArrayBuffer.prototype.slice = function(start, end) {\n//         const that = new Uint8Array(this)\n//         if (end == undefined) end = that.length\n//         const result = new ArrayBuffer(end - start)\n//         const resultArray = new Uint8Array(result)\n//         for (let i = 0; i < resultArray.length; i++)\n//             resultArray[i] = that[i + start]\n//         return result\n//     }\n\n/**\n * Mapping of typed array constructors by name\n * @category ArrayBuffer\n */\nexport const TYPED_ARRAYS = {\n    Int8Array: Int8Array,\n    Uint8Array: Uint8Array,\n    Uint8ClampedArray: Uint8ClampedArray,\n    Int16Array: Int16Array,\n    Uint16Array: Uint16Array,\n    Int32Array: Int32Array,\n    Uint32Array: Uint32Array,\n    Float32Array: Float32Array,\n    Float64Array: Float64Array,\n}\n\n/**\n * Create a typed array from an ArrayBuffer by name\n * @param type - Name of the typed array constructor\n * @param buffer - ArrayBuffer to use\n * @category ArrayBuffer\n */\nexport function getTypedArray(type: keyof typeof TYPED_ARRAYS, buffer: ArrayBuffer) {\n    return new TYPED_ARRAYS[ type ](buffer)\n}\n","/**\n * Convert a string to title case\n * @param str - The string to convert\n *\n * @category Text\n */\nexport function toTitleCase(str: string) {\n    return str.replace(\n        /\\w\\S*/g,\n        function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n        }\n    )\n}\n\n/**\n * Convert a string to camel case\n * @param str - The string to convert\n *\n * @category Text\n */\nexport function toCamelCase(str: string) {\n    return str.replace(\n        /([-_][a-z])/ig,\n        ($1) => {\n            return $1.toUpperCase()\n                .replace('-', '')\n                .replace('_', '')\n        }\n    )\n}\n\n/**\n * Parse a file extension from a path\n * @param path - The path to parse\n * @returns file extension without the dot (e.g. 'png')\n *\n * @category Text\n */\nexport function parseFileExtension(path: string): string {\n    if (!path || path === '' || path.match(/__MACOSX\\/.*\\._/)) return '' // todo: proper hidden files checks\n    path = path.replace(/\\?.*$/, '') // remove query string\n\n    const basename = path.split(/[\\\\/]/).pop() ?? '',\n        pos = basename.lastIndexOf('.')\n    if (basename === '' || pos < 1)\n        return ''\n    return basename.slice(pos + 1)\n}\n\n/**\n * Get the filename from a path, similar to PHP's basename()\n * @param url\n *\n * @category Text\n */\nexport function getFilenameFromPath(url: string) {\n    return url.substring(url.lastIndexOf('/') + 1)\n}\n\n/**\n * Escape a string for use in a regular expression\n * @param str\n *\n * @category Text\n */\nexport function escapeRegExp(str: string) {\n    return str.replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Replace all occurrences of a string in another string\n * @param str - The string to search\n * @param find - The string to replace\n * @param replace - The replacement string\n *\n * @category Text\n */\nexport function replaceAll(str: string, find: string, replace: string) {\n    return str.replace(new RegExp(escapeRegExp(find), 'g'), replace)\n}\n\n/**\n * Replace a string in a text, optionally prepending, appending, replacing all occurrences, and/or calling a callback if the string is not found\n * @param source - The source text\n * @param str - The string to replace\n * @param newStr - The replacement string\n * @param replaceAll - Replace all occurrences\n * @param prepend - Prepend the replacement string\n * @param append - Append the replacement string\n * @param notFoundCallback - Callback to call if the string is not found\n */\nexport function safeReplaceString(source: string, str: string, newStr: string, {\n    replaceAll = false,\n    prepend = false,\n    append = false,\n    notFoundCallback = () => {},\n} = {}) {\n    if (notFoundCallback) {\n        if (!source.includes(str)) {\n            notFoundCallback()\n            return source\n        }\n    }\n    let s = newStr\n    if (prepend) {\n        s = newStr + str\n    } else if (append) {\n        s = str + newStr\n    }\n    return replaceAll ? source.replaceAll(str, s) : source.replace(str, s)\n}\n\n/**\n * Find the longest common prefix in an array of strings\n * https://stackoverflow.com/questions/68702774/longest-common-prefix-in-javascript\n * @param words\n */\nexport function longestCommonPrefix(words: string[]): string {\n    words.sort() // shortest string will be first and the longest last\n    return (\n        words[0].split('') // converts shortest word to an array of chars\n            .map((char, idx) => words[words.length - 1][idx] === char ? char : '\\0') // replaces non-matching chars with NULL char\n            .join('') // converts back to a string\n            .split('\\0') // splits the string by NULL characters\n            .at(0) // returns the first part\n        || ''\n    )\n}\n","import {replaceAll} from './text'\n\n/**\n * A template literal tag that does nothing. Useful for syntax highlighting of GLSL code.\n *\n * @example\n * ```js\n * const vertexShader = glsl`\n *    void main() {}\n * `\n * ```\n * @category Template Literals\n */\nexport const glsl = (strings: any, ...rest: any[]) => String.raw({raw: strings} as TemplateStringsArray, ...rest)\n\n/**\n * A template literal tag that does nothing. Useful for syntax highlighting of CSS code.\n *\n * @example\n * ```js\n * const vertexShader = css`\n *    .my-class {\n *        color: red;\n *    }\n * `\n * ```\n * @category Template Literals\n */\nexport const css = (strings: any, ...rest: any[]) => String.raw({raw: strings} as TemplateStringsArray, ...rest)\n\n/**\n * A template literal tag that does nothing. Useful for syntax highlighting of HTML code.\n *\n * @example\n * ```js\n * const vertexShader = html`\n *    <div class=\"my-class\">\n *        <p>Some text</p>\n *    </div>\n * `\n * ```\n * @category Template Literals\n */\nexport const html = (strings: any, ...rest: any[]) => String.raw({raw: strings} as TemplateStringsArray, ...rest)\n\n/**\n * Converts an SVG string to data url. This is useful for creating images from SVGs, or using SVGs in CSS.\n * To use put in template string: ```url(${svgUrl`<svg>...</svg>`})```\n * @param strings - template strings\n * @param rest - template values\n *\n * @example\n * ```typescript\n * const url = svgUrl`\n *  <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"> ... </svg>\n * `\n * console.log(url) // data:image/svg+xml;charset=UTF-8,...\n * ```\n *\n * @category Template Literals\n */\nexport const svgUrl = (strings: any, ...rest: any[]) => {\n    let encoded = String.raw({raw: strings} as TemplateStringsArray, ...rest)\n    encoded = replaceAll(encoded, '%', '%25')\n    encoded = replaceAll(encoded, '> <', '><') // normalise spaces elements\n    encoded = replaceAll(encoded, '; }', ';}') // normalise spaces css\n    encoded = replaceAll(encoded, '<', '%3c')\n    encoded = replaceAll(encoded, '>', '%3e')\n    encoded = replaceAll(encoded, '\"', '\\'')\n    encoded = replaceAll(encoded, '#', '%23') // needed for ie and firefox\n    encoded = replaceAll(encoded, '{', '%7b')\n    encoded = replaceAll(encoded, '}', '%7d')\n    encoded = replaceAll(encoded, '|', '%7c')\n    encoded = replaceAll(encoded, '^', '%5e')\n    encoded = replaceAll(encoded, '`', '%60')\n    encoded = replaceAll(encoded, '@', '%40')\n    encoded = replaceAll(encoded, '&', '&amp;')\n    encoded = replaceAll(encoded, '\\n', '%0A')\n\n    return 'data:image/svg+xml;charset=UTF-8,' + encoded\n}\n","import {createStyles} from \"./dom\";\nimport {css} from \"./template-literals\";\n\n/**\n * Styles the default scrollbar to be more pretty and less intrusive (especially on dark backgrounds), (similar to MacOS)\n */\nexport function prettyScrollbar(root: Element|undefined = document.head){\n    return createStyles(css`\n      ::-webkit-scrollbar\n      {\n        width: 8px;  /* for vertical scrollbars */\n        height: 8px; /* for horizontal scrollbars */\n      }\n      ::-webkit-scrollbar-track\n      {\n        background: rgba(64, 64, 64, 0.4);\n        border-radius: 6px;\n      }\n      ::-webkit-scrollbar-thumb\n      {\n        background: rgba(128, 128, 128, 0.2);\n        border-radius: 6px;\n      }\n      ::-webkit-scrollbar-corner {background: rgba(0,0,0,0.5);}\n    `, root)\n}\n","/**\n * Download a blob as a file in the browser.\n * @param b - blob to download\n * @param name - name of the file\n * @category Browser\n */\nexport function downloadBlob(b: Blob, name: string) {\n    const url = window.URL.createObjectURL(b)\n    const a = document.createElement('a')\n    a.style.display = 'none'\n    a.href = url\n    a.download = name\n    document.body.appendChild(a)\n    a.click()\n    setTimeout(() => {\n        document.body.removeChild(a)\n        window.URL.revokeObjectURL(url)\n    }, 1000)\n}\n\n/**\n * Convert a blob to a data url.\n * @param blob - blob to convert\n * @category Browser\n */\nexport async function blobToDataURL(blob: Blob): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n        const reader = new FileReader()\n        reader.onload = _e => resolve(reader.result as string)\n        reader.onerror = _e => reject(reader.error)\n        reader.onabort = _e => reject(new Error('Read aborted'))\n        reader.readAsDataURL(blob)\n    })\n}\n\n/**\n * Download a file in the browser.\n * @param b - file to download\n * @param name - name of the file (optional)\n * @category Browser\n */\nexport function downloadFile(b: File, name?: string) {\n    return downloadBlob(b, name ?? b.name)\n}\n\n// todo: add/test options for multiple files and directory upload\n/**\n * Prompt the user to select a file or directory in the browser.\n * @param multiple - allow multiple files\n * @param directory - allow directory\n * @param accept - file types to accept (default: all), e.g. 'image/*'\n * @category Browser\n */\nexport async function uploadFile(multiple = false, directory = false, accept?: string): Promise<File[]> {\n    const input = document.createElement('input')\n    input.type = 'file'\n    input.multiple = multiple\n    input.accept = accept || '*'\n    input.webkitdirectory = directory\n    input.style.display = 'none'\n    document.body.appendChild(input)\n    input.click()\n    const files = await new Promise<File[]>((resolve) => {\n        input.onchange = _e => {\n            resolve(Array.from(input.files || []))\n        }\n    })\n    document.body.removeChild(input)\n    return files\n}\n\n/**\n * Check if the browser is running on a mobile or tablet device.\n */\nexport function mobileAndTabletCheck() {\n    let check = false;\n    // @ts-expect-error copied\n    (function(a) {if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true})(navigator.userAgent || navigator.vendor || window.opera)\n    return check\n}\n","// from three.js\n/**\n * Converts a single color channel from the sRGB color space to linear.\n * @param c - The color channel to be converted.\n * @category Color\n */\nexport function SRGBToLinear( c: number ): number {\n    return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n}\n\n/**\n * Converts a single color channel from the linear color space to sRGB.\n * @param c - The color channel to be converted.\n * @category Color\n */\nexport function LinearToSRGB( c: number): number {\n    return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n}\n\n/**\n * Creates an image data url from a color string.\n * @param color - color string (css compatible color)\n * @param width - width of the image (default: 1)\n * @param height - height of the image (default: 1)\n * @return data url\n */\nexport function colorToDataUrl(color: string, width = 1, height = 1){\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n    const ctx = canvas.getContext('2d')!\n    ctx.fillStyle = '#' + color\n    ctx.fillRect(0, 0, width, height)\n    const url = canvas.toDataURL()\n    canvas.remove()\n    return url\n}\n","import {AnyOptions, ValOrFunc} from \"./types\";\n\n/**\n * Get property descriptor from object or its prototype chain\n * @param obj\n * @param prop\n *\n * @category JS Object\n */\nexport function getPropertyDescriptor<T>(obj: T, prop: keyof T) : PropertyDescriptor | undefined {\n    let desc\n    do {\n        desc = Object.getOwnPropertyDescriptor(obj, prop)\n    } while (!desc && (obj = Object.getPrototypeOf(obj)))\n    return desc\n}\n\n/**\n * Check if property is writable in object or its prototype chain\n * @param object - object to check\n * @param prop - property to check\n * @param allowWritable - allow writable properties without setter\n * @param allowAny - allow any property (even if it doesn't exist)\n *\n * @category JS Object\n */\nexport function isPropertyWritable<T>(object: T, prop: keyof T, allowWritable = true, allowAny = false) {\n    const desc = getPropertyDescriptor(object, prop)\n    return !!desc?.set\n        || allowWritable && desc?.writable !== false && desc?.get === undefined\n        || allowAny && !desc\n}\n\n/**\n * Set value only if setter exists\n * @param object - object to set\n * @param prop - property to set\n * @param value - value to set\n * @param allowWritable - allow writable properties without setter\n * @param allowAny - allow any property (even if it doesn't exist)\n *\n * @category JS Object\n */\nexport function safeSetProperty<T, K extends keyof T>(object: T | undefined | null, prop: K, value: NonNullable<T>[K], allowWritable = true, allowAny = false): boolean {\n    // check type?\n    if (object && isPropertyWritable(object, prop, allowWritable, allowAny)) {\n        object[prop] = value\n        return true\n    }\n    return false\n}\n\n/**\n * Get value, but if it is a function, call it with args\n * @param s - value or function\n * @param args - arguments to pass to function\n *\n * @category JS Object\n */\nexport function getOrCall<T>(s: ValOrFunc<T | undefined>, ...args: any[]): T|undefined {\n    if (typeof s === 'function') s = (s as ((...a:any[])=>T|undefined))(...args)\n    return s\n}\n\n/**\n * Copy properties from source to dest. Similar to Object.assign, but only copies properties that exist in source, dest and propList.\n * @param source - source object\n * @param dest - destination object\n * @param propList - list of properties to copy\n *\n * @category JS Object\n */\nexport function copyProps<T = AnyOptions>(source: Record<keyof T, any>, dest: T, propList: (keyof T)[]): T {\n    for (const str of propList) {\n        const s = source[str]\n        if (s !== undefined) safeSetProperty(dest, str, s, true)\n        // if (s !== undefined) dest[str] = s\n    }\n    return dest\n}\n","import {AnyFunction} from './types'\n\n/**\n * Returns true if the array includes all the elements of the sub array\n * @param arr\n * @param subArr\n */\nexport function includesAll(arr: any[], subArr: IterableIterator<any>) {\n    for (const sub of subArr) {\n        if (!arr.includes(sub)) return false\n    }\n    return true\n}\n\n/**\n * like Array.prototype.findIndex but from the end\n * @param arr\n * @param predicate\n */\nexport function findLastIndex<T>(arr: T[], predicate: (v: T)=>boolean){\n    for (let i = arr.length-1; i >= 0; i--) {\n        if (predicate(arr[i])) return i\n    }\n    return -1\n}\n\n/**\n * Call f1 before calling f2\n * Sample usage\n * ```\n * const logRender = ()=>console.log('render')\n * obj.render = wrapThisFunction(logRender, obj.beforeRender)\n * // now calling obj.beforeRender(), will log 'render' and then call obj.beforeRender()\n * ```\n * @param f1\n * @param f2\n */\nexport function wrapThisFunction<T extends AnyFunction, T2>(f1: ()=>void, f2?: T): T {\n    return function(this: T2, ...args: Parameters<T>) {\n        f1()\n        return f2 && f2.call(this, ...args)\n    } as T\n}\n\n/**\n * Call f1 with the same params as f2 before calling f2\n * Sample usage\n * ```\n * const logRender = ()=>console.log('render')\n * obj.render = wrapThisFunction(logRender, obj.beforeRender)\n * // now calling obj.beforeRender(), will log 'render' and then call obj.beforeRender()\n * ```\n * @param f1\n * @param f2\n */\nexport function wrapThisFunction2<T extends AnyFunction, T2>(f1: T, f2?: T): T {\n    return function(this: T2, ...args: Parameters<T>) {\n        f1(...args)\n        return f2 && f2.call(this, ...args)\n    } as T\n}\n","/**\n * Access property in an object using a string path. Similar to lodash.get\n * @param access - path to access\n * @param tar - target object\n * @param throwOnInvalid - throw error if invalid access or property is undefined. Default is false\n *\n * @example\n * ```js\n * const obj = {a: {b: {c: 1}}}\n * const c = deepAccessObject(['a', 'b', 'c'], obj)\n * console.log(c) // 1\n * ```\n *\n * @category JS Object\n */\nexport function deepAccessObject(access: string | string[], tar: any, throwOnInvalid = false): any {\n    if (typeof access === 'string') access = access.split('.')\n    while (access.length > 0) {\n        if (!tar) return tar\n        const p = access.splice(0, 1)[0] as string\n        if (p.length < 1) continue\n        if (Array.isArray(tar)) {\n            tar = tar[parseInt(p)]\n        }else if (typeof tar==='object' && p in tar) {\n            tar = tar[p]\n        } else {\n            // console.error('invalid access, check', p, tar)\n            if (throwOnInvalid)\n                throw new Error('invalid access, check ' + p + ' in ' + tar)\n            else return undefined\n            // return tar\n        }\n    }\n    return tar\n}\n\n\n/**\n * Find the key of an object with a given value.\n * @param object - object to search\n * @param value - value to search for\n *\n * @category JS Object\n */\nexport function getKeyByValue(object: Record<string, any>, value: any): string|undefined {\n    return Object.keys(object).find(key => object[key] === value)\n}\n\n/**\n * Check if an object has a property. Same as {@link Object.hasOwn} or {@link Object.hasOwnProperty}\n * @param o\n * @param v\n */\nexport function objectHasOwn(o: object, v: PropertyKey): boolean {\n    return Object.hasOwn ? Object.hasOwn(o, v) : o.hasOwnProperty(v)\n}\n\n/**\n * Execute a function on each property of an object and return the result as a new object\n * This allows in place modification of the object.\n * To create a new object, set inPlace to false, or use {@link objectMap2} to modify the keys as well\n * Similar to {@link Array.map} but for objects.\n * @param obj - object\n * @param fn - function to execute on each property\n * @param inPlace - if true, the original object is modified. Default is true\n */\nexport function objectMap<T extends string|number|symbol, V>(obj: Record<T, V>, fn: (val: V, key: T)=>V, inPlace = true): Record<T, V> {\n    const result: any = inPlace ? obj : {}\n    const keys = Object.keys(obj) as T[]\n    for (const key of keys) result[key] = fn(obj[key], key)\n    return result\n}\n\n/**\n * Shorthand for `Object.fromEntries(Object.entries(obj).map(fn))`\n * Similar to {@link objectMap} but uses {@link Object.fromEntries} to create the new object, so keys can also be changed.\n * @param obj\n * @param fn\n */\nexport function objectMap2<T extends string|number|symbol, V = any>(obj: Record<T, V>, fn: ([key, val]: [T, V])=>[T, V]): Record<T, V> {\n    return Object.fromEntries((Object.entries(obj) as [T, V][]).map((v: [T, V])=>fn(v))) as Record<T, V>\n}\n\n","import {safeSetProperty} from './obj-property'\nimport {findLastIndex} from './misc'\nimport {objectMap2} from './object'\n\n/**\n * Serializer interface for primitive, array and struct/custom object types\n * @category Serialization\n */\nexport interface Serializer{\n    serialize: (obj: any, meta?: any) => any\n    deserialize: (data: any, obj: any, meta?: any) => any // todo: handle when data is already deserialized for Texture, Material etc\n    isType: (obj: any) => boolean\n    priority?: number // lower priority serializers are checked first\n}\n\nconst objSerializer: Serializer = { // object\n    priority: Infinity,\n    serialize: (obj: any, meta?: any)=> objectMap2(obj, ([k, v]) => [k, Serialization.Serialize(v, meta, false)]),\n    deserialize: (data: any, obj: any, meta: any)=>\n        Object.assign(obj||{}, objectMap2(data, ([k, v]) => [k, Serialization.Deserialize(v, obj?.[k], meta, false)])),\n    isType: (obj: any) => (obj.constructor||Object) === Object,\n}\n/**\n * Serialization class with static methods for serializing and deserializing objects.\n * Properties and classes can be marked serializable by adding {@link serialize} and {@link serializable} decorators.\n * @category Serialization\n */\nexport class Serialization{\n    static TypeMap = new Map<ObjectConstructor, [string, string][]>()\n    static SerializableClasses = new Map<string, any>()\n\n    /**\n     * Serializers for primitive, array and struct/custom object types\n     */\n    static Serializers: Serializer[] = [\n        { // arrays\n            priority: 0,\n            isType: (obj: any) => Array.isArray(obj),\n            serialize: (obj: any, meta?: any)=> obj.map((v: any) => Serialization.Serialize(v, meta, false)),\n            deserialize: (data: any, obj: any, meta: any)=>{\n                const l = data.length\n                if (!Array.isArray(obj)) obj = []\n                for (let i = 0; i < l; i++) {\n                    const d = data[i]\n                    const de = obj.length > i ? Serialization.Deserialize(d, obj[i], meta, false) : Serialization.Deserialize(d, undefined, meta, false)\n                    if (obj.length <= i) obj.push(de)\n                    else obj[i] = de\n                }\n                return obj\n            },\n        },\n        { // primitives\n            priority: 0,\n            isType: (obj: any) => !obj || typeof obj !== 'object',\n            serialize: (obj: any)=> {\n                if (obj && typeof obj === 'number') {\n                    if (obj === Infinity) return 'Infinity'\n                    if (obj === -Infinity) return '-Infinity'\n                    if (isNaN(obj)) return 'NaN'\n                }\n                return obj\n            },\n            deserialize: (data: any, obj: any)=>{\n                if (typeof obj === 'number') {\n                    if (data === 'Infinity') return Infinity as any\n                    if (data === '-Infinity') return -Infinity as any\n                    if (data === 'NaN') return NaN as any\n\n                    if (typeof data === 'number' || !data) return data\n                }\n                return data\n            },\n        },\n        objSerializer,\n    ]\n\n    static GetSerializer(obj: any){\n        return Serialization.Serializers.find(s => s.isType(obj))\n    }\n\n    static RegisterSerializer(...serializers: Serializer[]){\n        for (const serializer of serializers) {\n            const priority = serializer.priority ?? 1e10\n            const i = findLastIndex(Serialization.Serializers, s => s.priority !== undefined && s.priority < priority)\n            if (i >= 0) Serialization.Serializers.splice(i+1, 0, serializer)\n            else Serialization.Serializers.push(serializer)\n        }\n    }\n\n    static UnregisterSerializer(...serializers: Serializer[]){\n        for (const serializer of serializers) {\n            const i = Serialization.Serializers.indexOf(serializer)\n            if (i >= 0) Serialization.Serializers.splice(i, 1)\n        }\n    }\n\n\n    /**\n     * Serialize an object\n     * @param obj - object to serialize\n     * @param meta - Optional object to store common meta-data/resources across the serialization process of multiple objects\n     * @param isThis - true if called from inside the serialization function, like custom {@link IJSONSerializable.toJSON}.\n     */\n    static Serialize(obj: any, meta?: Record<string, Record<string, any>>, isThis = false){\n        if (typeof obj === 'function') return undefined\n\n        if(!isThis) {\n            const serializer = Serialization.GetSerializer(obj)\n            if (serializer) return serializer.serialize(obj, meta)\n\n            // Handle classes with explicit serialization with toJSON and fromJSON functions\n            // toJSON functions can call Serialize(with isThis=true) to serialize the properties with @serialize decorator\n            if (typeof obj.toJSON === 'function') {\n                const res = obj.toJSON(meta, true)\n                if (obj.serializableClassId && res) res.serializableClassId = obj.serializableClassId\n                return res\n            }\n        }\n\n        // Handle classes with @serializable decorator and serialize all properties with @serialize decorator\n        let type = obj.constructor ?? Object\n        const result: any = {}\n        // Loop through all parent classes and serialize properties with @serialize decorator\n        while (type && type !== Object) {\n            const Type = Serialization.TypeMap.get(type) ?? []\n            for (const [key, propKey] of Type) {\n                result[key] = Serialization.Serialize(obj[propKey], meta, false)\n            }\n            type = Object.getPrototypeOf(type)\n        }\n        if (obj.serializableClassId) result.serializableClassId = obj.serializableClassId\n        return result\n    }\n\n    /**\n     * Deserialize an object\n     * @param data - data to deserialize\n     * @param obj - current object that's set. If of the same class/type the data is deserialized into that instead of creating new objects.\n     * @param meta - Optional object to retrieve common meta-data/resources across the deserialization process of multiple objects. Objects in meta must be class instances, not js objects. (like Material, Texture, Object3D etc)\n     * @param isThis - true if called from inside the deserialization function, like custom {@link IJSONSerializable.fromJSON}\n     */\n    static Deserialize(data: any, obj: any, meta?: Record<string, any>, isThis = false){\n        if (data === undefined) return obj // undefined is not deserialized\n        if(obj === data) return obj // same object\n\n        // let isResource = false\n        // If data is an embedded resource in meta\n        if(data && typeof data === 'object' && (data.constructor||Object) === Object && data.resource && typeof data.resource === 'string' && data.uuid){\n            const res = meta?.[data.resource]\n            if(res) {\n                // isResource = true\n                data = res[data.uuid]\n                if(typeof data === 'object') {\n                    data.__useCount = data.__useCount ? data.__useCount + 1 : 1 // used for materials for now, see AssetManagerPlugin.importViewerConfig\n                }\n                if(!data) console.warn(`Resource ${data.resource} with uuid ${data.uuid} not found`)\n                if(obj === data) return obj // same object\n                if(data && typeof data === 'object' ) {\n                    const isDeserializedClass = (data.constructor||Object) !== Object // data is already deserialized\n                    if(isDeserializedClass) {\n                        if (!obj) {\n                            return data\n                        } else {\n                            // todo: if data is deserialized already and !== obj.\n                            // obj is not null, could be a Texture, Material, Object etc\n                            // should we ignore the current object and assign one from meta or copy data from meta to current object\n                            // for textures, it should be replaced. should we copy if uuid is same?\n                            // for materials, if uuid is same and type is same it should be copied otherwise replaced\n                            // for vector3d, copy data\n                            // todo: need to implement.\n                            console.warn(\"replacing object\", obj, 'with deserialized object from meta', data)\n                            return data;\n                        }\n                    }else { // data is not deserialized, or is a normal object\n                        // this is not supported. meta should only have class instances, not js objects\n                        console.error('Deserialize; meta should only have class instances, not js objects', data, obj, meta)\n                        if(!obj){\n                            // continue deserializing and return deserialized - done\n                        }else {\n                            // continue deserializing then copy to current obj?\n                        }\n                    }\n                }\n            }\n            else {\n                console.warn(`Resource ${data.resource} not found`)\n                return obj\n            }\n        }\n        if(data && typeof data === 'object' && (data.constructor||Object) !== Object && !Array.isArray(data) && !data.serializableClassId){\n            if(data instanceof Blob) return data // todo special check for Blob/File\n\n            console.warn('Data might already be deserialized. It will be cloned, or copied to source', data, \"source\", obj, data.constructor, data.constructor !== Object)\n        }\n\n        // todo handle File/Blob and FS API descriptors (try loading SheenChair.glb from three,js in threepipe)\n\n        // Create new object if not provided\n        if (data && typeof data === 'object') {\n            // if data is deserialized already and obj is null. then should we clone the data or assign it directly?\n            // if it's a resource from meta then assign it directly(done above), otherwise clone (done just below).\n            if (data.serializableClassId && (!obj || obj.serializableClassId !==data.serializableClassId) ) { // if the data is already deserialized, it will be cloned\n                const constructor = Serialization.SerializableClasses.get(data.serializableClassId)\n                if (constructor) {\n                    if (constructor.DataInConstructor) // not used anywhere right now. todo: remove? because we are anyway assigning the data to the object after the constructor using @serialize and support fromJSON\n                        obj = new constructor(data)\n                    else obj = new constructor()\n                }\n            } else if ((data.constructor||Object) === Object && !obj) {\n                obj = {}\n            } else if (Array.isArray(data) && !obj) {\n                obj = []\n            }\n        }\n        if (typeof obj === 'function') {\n            console.error('cannot deserialize a function', obj, data)\n            return obj // throw error maybe?}\n        }\n\n        if(!isThis) {\n            const serializer = Serialization.GetSerializer(data)\n            if (serializer && serializer !== objSerializer) return serializer.deserialize(data, obj, meta)\n        }\n\n        if (!data || obj === undefined || obj === null || typeof obj !== 'object') {\n            return data\n        }\n\n        // Handle classes with explicit serialization with toJSON and fromJSON functions\n        // fromJSON functions can call Deserialize(with isThis=true) to deserialize the properties with @serialize decorator\n        if (!isThis && typeof obj?.fromJSON === 'function') {\n            obj.fromJSON(data, meta, true)\n            return obj // cannot be sure what the return value is\n        }\n\n        let type = obj.constructor ?? Object\n\n        if(type === Object) return objSerializer.deserialize(data, obj, meta)\n\n        // Loop through all parent classes and deserialize properties with @serialize decorator\n        while (type && type !== Object) {\n            const Type = Serialization.TypeMap.get(type) ?? []\n            for (const [key, propKey] of Type) {\n                const current = obj[propKey]\n                const newVal = Serialization.Deserialize(data[key], current, meta, false)\n                if (newVal !== current) safeSetProperty(obj, propKey as any, newVal, true)\n            }\n            type = Object.getPrototypeOf(type)\n        }\n        return obj\n\n    }\n\n}\n","import {AnyFunction} from './types'\n\n/**\n * calls fn.call(obj) or fn() appropriately\n *\n * @category JS Object\n */\nexport class FnCaller {\n    private static methodMap = new WeakMap<object, WeakMap<Function, boolean>>();\n\n    static callFunction(fn: AnyFunction, obj?: Record<string|symbol, any>, params: any[] = []) {\n        if (!obj) return fn(...params)\n        if (fn.name && obj[fn.name] === fn) return fn.call(obj, ...params)\n        // all this is required because of minification, there fn.name is mangled. To test, minify and mangle with webpack\n        if (!FnCaller.methodMap.has(obj)) FnCaller.methodMap.set(obj, new WeakMap<Function, boolean>());\n        const methods = FnCaller.methodMap.get(obj)!;\n        if (!methods.has(fn)) {\n            let p = obj\n            while(p){\n                const descp = Object.values(Object.getOwnPropertyDescriptors(p)) as PropertyDescriptor[];\n                // we need to loop over descriptors and we cannot access the value to check because that will call any getters for no reason\n                for(let desc of descp){\n                    if (desc.value !== fn) continue;\n                    methods.set(fn, true);\n                    return fn.call(obj, ...params);\n                }\n                p = Object.getPrototypeOf(p);\n            }\n            methods.set(fn, false);\n        }\n        return methods.get(fn) ? fn.call(obj, ...params) : fn(...params);\n    }\n}\n","import {AnyFunction} from \"./types\";\nimport {Serialization} from './serialization'\nimport {objectHasOwn} from './object'\nimport {FnCaller} from './fnCaller'\n\n/**\n * Decorator that redefines a property with getter and setter, and calls a function when the property is changed.\n * Parameters passed to the function are the property key and the new value.\n * @note - Does not work with \"target\": \"esnext\" in tsconfig.json\n * @note - Requires \"experimentalDecorators\": true in tsconfig.json\n * @todo add example.\n * @param fnKey - use: `<MyClass>.prototype.<myFunction>` or define an arrow function: `(key, value, oldValue, target) => {}`.\n * @param paramType -\n * if param, the function is called with 4 parameters: `key, value, oldValue, target`, default for {@link onChange}\n * if object, the function is called with an object parameter: `{key, value, oldValue, target}`, default for {@link onChange3}\n * if void then no params are passed. {@link onChange2}\n * Default: false.\n *\n * @category Decorators\n */\nexport function onChange<TTarget = any>(\n    fnKey: string |\n        ((key: string, value: any, oldValue: any, target: TTarget)=>void) // target is this\n        //| ((obj:{key: string, value: any, oldValue: any, target: TTarget})=>void)\n    , paramType: 'param'|'object'|'void' = 'param'): PropertyDecorator {\n    if (!fnKey) throw new Error('onChange: fnKey is undefined, make sure the function exists or provide a string')\n    return (targetPrototype: any, propertyKey: string|symbol, descriptor?: TypedPropertyDescriptor<any>) => {\n        const prop = {\n            get() {\n                return this[`_oc_${propertyKey as string}`]\n            },\n            set(newVal: any) {\n                const oldVal = this[`_oc_${propertyKey as string}`]\n                if (oldVal === newVal) return\n                this[`_oc_${propertyKey as string}`] = newVal\n                const params = paramType === 'param' ? [propertyKey, newVal, oldVal, this] : paramType === 'object' ? [{key: propertyKey, value: newVal, oldValue: oldVal, target: this}] : []\n                if (typeof fnKey === 'string') this[fnKey]?.call(this, ...params)\n                else if (typeof fnKey === 'function') FnCaller.callFunction(fnKey, this, params)\n            },\n        } as any\n        // babel(in react-scripts) - https://github.com/babel/babel/blob/909ed3473968c2ccd75f89e17c37ef4771cc3ff8/packages/babel-helpers/src/helpers/applyDecoratedDescriptor.ts#L11\n        if (descriptor) {\n            if (objectHasOwn(descriptor, 'value')) delete descriptor.value\n            if (objectHasOwn(descriptor, 'writable')) delete descriptor.writable\n            if (objectHasOwn(descriptor, 'initializer')) delete (descriptor as any).initializer\n            return Object.assign(descriptor, prop)\n        }\n        Object.defineProperty(targetPrototype, propertyKey, prop)\n    }\n}\n\n/**\n * Similar to {@link onChange}, but accepts any function and paramType defaults to 'void'. The function is called with no parameters. if 'void'\n * @param fnKey\n * @param paramType\n */\nexport function onChange2(\n    fnKey: string|AnyFunction,\n    paramType: 'param'|'object'|'void' = 'void'): PropertyDecorator {\n    if (!fnKey) throw new Error('onChange: fnKey is undefined, make sure the function exists or provide a string')\n    return onChange(fnKey, paramType)\n}\n\n/**\n * Similar to {@link onChange}, but accepts any function and paramType defaults to 'object'. The function is called with an object parameter: `{key, value, oldValue, target}`.\n * @param fnKey\n * @param paramType\n */\nexport function onChange3<TTarget = any>(\n    fnKey: string|((obj:{key: string, value: any, oldValue: any, target: TTarget})=>void),\n    paramType: 'object'|'void' = 'object'): PropertyDecorator {\n    if (!fnKey) throw new Error('onChange: fnKey is undefined, make sure the function exists or provide a string')\n    return onChange<TTarget>(fnKey as any, paramType)\n}\n\n/**\n * Similar to onChange but dispatches an event instead of calling a function.\n * Requires `dispatchEvent` to be defined on the target.\n * @param eventName - The name of the event to dispatch. Default: '`key`-changed'\n */\nexport function onChangeDispatchEvent(eventName?: string): PropertyDecorator {\n    return onChange((key, value, oldValue, target) => {\n        if(!target.dispatchEvent) throw new Error('onChangeDispatchEvent: target does not have dispatchEvent')\n        target.dispatchEvent({type: eventName || `${key}-changed`, detail: {key, value, oldValue}})\n    }, 'param')\n}\n\n/**\n * Decorator to mark a class property as serializable using the {@link Serialization} class.\n * @note - Requires \"experimentalDecorators\": true in tsconfig.json\n * @param key - The key to use when serializing the property. If not provided, the property name is used (for this make sure the property name is not mangled during minification).\n * @category Decorators\n */\nexport function serialize(key?: string): PropertyDecorator {\n    return (targetPrototype: any, propertyKey: string|symbol) => {\n        const type = targetPrototype.constructor\n        if (type === Object) throw new Error('All properties in an object are serialized by default')\n        if (!Serialization.TypeMap.has(type)) Serialization.TypeMap.set(type, [])\n\n        Serialization.TypeMap.get(type)!.push([key || propertyKey as string, propertyKey as string])\n    }\n}\n\n/**\n * Decorator to mark a class as serializable using the {@link Serialization} class.\n * @note - Requires \"experimentalDecorators\": true in tsconfig.json\n * @param id - The id to use when serializing the class. This is used to identify the class when deserializing. Class names can be mangled during minification, so it is required to provide an id.\n */\nexport function serializable(id: string) {\n    return <T extends new (...args: any[]) => any>(constructor: T) =>{\n        constructor = class extends constructor {\n            // noinspection JSUnusedGlobalSymbols\n            readonly serializableClassId = id\n            // static DataInConstructor = false // if constructor is equivalent to fromJSON, see LUTCubeTextureWrapper.\n        }\n        Serialization.SerializableClasses.set(id, constructor)\n        return constructor\n    }\n}\n","/**\n * Encrypts plaintext using AES-GCM with supplied password, for decryption with aesGcmDecrypt().\n *                                                                      (c) Chris Veness MIT Licence\n * https://gist.github.com/chrisveness/43bcda93af9f646d083fad678071b90a\n * Modified to work with Uint8Array and string content.\n *\n * @param content - Plaintext or Uint8 Buffer to be encrypted.\n * @param password - Plaintext or Uint8 Buffer Password to use to encrypt content.\n * @param prefix - Optional prefix to prepend to the ciphertext.\n * @returns Encrypted ciphertext. If content is a string, the ciphertext is a string. If content is a Uint8Array, the ciphertext is a new Uint8Array.\n *\n *\n * @example\n *   const ciphertext = await aesGcmEncrypt('my secret text', 'pw');\n *   aesGcmEncrypt('my secret text', 'pw').then(function(ciphertext) { console.log(ciphertext); });\n *\n * @category Encryption\n */\nexport async function aesGcmEncrypt<T extends string|Uint8Array>(content: T, password: string|Uint8Array, prefix?: string | Uint8Array): Promise<T> {\n    const pwUtf8 = typeof password === 'string' ? new TextEncoder().encode(password) : password // encode password as UTF-8\n    const pwHash = await crypto.subtle.digest('SHA-256', pwUtf8) // hash the password\n\n    const iv = crypto.getRandomValues(new Uint8Array(12)) // get 96-bit random iv\n    const ivStr = Array.from(iv).map(b => String.fromCharCode(b)).join('') // iv as utf-8 string\n\n    const alg = {name: 'AES-GCM', iv: iv} // specify algorithm to use\n\n    const key = await crypto.subtle.importKey('raw', pwHash, alg, false, ['encrypt']) // generate key from pw\n\n    const ptUint8 = typeof content === 'string' ? new TextEncoder().encode(content) : content as Uint8Array // encode plaintext as UTF-8\n    const ctBuffer = await crypto.subtle.encrypt(alg, key, ptUint8) // encrypt plaintext using key\n\n    const ctUint = new Uint8Array(ctBuffer)\n    const ctArray = Array.from(ctUint) // ciphertext as byte array\n    const ctStr = ctArray.map(byte => String.fromCharCode(byte)).join('') // ciphertext as string\n\n    const prefixStr = prefix ? typeof prefix === 'string' ? prefix : new TextDecoder().decode(prefix) : ''\n    const prefixArray = prefix ? typeof prefix === 'string' ? new TextEncoder().encode(prefix) : Array.from(prefix) : []\n    return typeof content === 'string' ? (prefixStr + ivStr + ctStr) as T : new Uint8Array([...prefixArray, ...iv, ...ctArray]) as T\n}\n\n\n/**\n * Decrypts ciphertext encrypted with aesGcmEncrypt() using supplied password.\n *                                                                      (c) Chris Veness MIT Licence\n *\n * https://gist.github.com/chrisveness/43bcda93af9f646d083fad678071b90a\n * Modified to work with Uint8Array and string content.\n *\n * @param ciphertext - Ciphertext to be decrypted.\n * @param password - Password to use to decrypt ciphertext.\n * @returns Decrypted content. If ciphertext is a string, the plaintext is a string. If ciphertext is a Uint8Array, the plaintext is a new Uint8Array.\n *\n * @example\n *   const plaintext = await aesGcmDecrypt(ciphertext, 'pw');\n *   aesGcmDecrypt(ciphertext, 'pw').then(function(plaintext) { console.log(plaintext); });\n *\n * @category Encryption\n */\nexport async function aesGcmDecrypt<T extends string|Uint8Array>(ciphertext: T, password: string|Uint8Array): Promise<T> {\n    const pwUtf8 = typeof password === 'string' ? new TextEncoder().encode(password) : password // encode password as UTF-8\n    const pwHash = await crypto.subtle.digest('SHA-256', pwUtf8) // hash the password\n\n    const ivStr = ciphertext.slice(0, 12)\n    const iv = typeof ivStr === 'string' ? new Uint8Array(Array.from(ivStr).map(ch => ch.charCodeAt(0))) : ivStr // decode base64 iv\n\n    const alg = {name: 'AES-GCM', iv: iv} // specify algorithm to use\n\n    const key = await crypto.subtle.importKey('raw', pwHash, alg, false, ['decrypt']) // generate key from pw\n\n    const ctStr = ciphertext.slice(12)\n    const ctUint8 = typeof ctStr === 'string' ? new Uint8Array(Array.from(ctStr).map(ch => ch.charCodeAt(0))) : ctStr\n    // note: why doesn't ctUint8 = new TextEncoder().encode(ctStr) work?\n\n    try {\n        const plainBuffer = await crypto.subtle.decrypt(alg, key, ctUint8) // decrypt ciphertext using key\n        return typeof ciphertext === 'string' ? new TextDecoder().decode(plainBuffer) as T : new Uint8Array(plainBuffer) as T\n    } catch (e) {\n        throw new Error('Decrypt failed')\n    }\n}\n","/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Modified from: https://github.com/GoogleChromeLabs/text-editor/blob/main/src/inline-scripts/fs-helpers.js\n */\n\n/**\n * Open a handle to an existing file on the local file system.\n *\n * @return {!Promise<FileSystemFileHandle>} Handle to the existing file.\n */\nexport async function getFileHandle(): Promise<FileSystemFileHandle> {\n    // For Chrome 86 and later...\n    if ('showOpenFilePicker' in window) {\n        return window.showOpenFilePicker().then((handles) => handles[0]);\n    }\n    // For Chrome 85 and earlier...\n    return (window as any).chooseFileSystemEntries();\n}\n\n/**\n * Create a handle to a new (text) file on the local file system.\n *\n * @return {!Promise<FileSystemFileHandle>} Handle to the new file.\n */\nexport function getNewFileHandle(): Promise<FileSystemFileHandle> {\n    // For Chrome 86 and later...\n    if ('showSaveFilePicker' in window) {\n        const opts = {\n            types: [{\n                description: 'Text file',\n                accept: {'text/plain': ['.txt']},\n            }],\n        };\n        return window.showSaveFilePicker(opts);\n    }\n    // For Chrome 85 and earlier...\n    const opts = {\n        type: 'save-file',\n        accepts: [{\n            description: 'Text file',\n            extensions: ['txt'],\n            mimeTypes: ['text/plain'],\n        }],\n    };\n    return (window as any).chooseFileSystemEntries(opts);\n}\n\n/**\n * Reads the raw text from a file.\n *\n * @param {File} file\n * @return {!Promise<string>} A promise that resolves to the parsed string.\n */\nexport function readFile(file: File): Promise<string> {\n    // If the new .text() reader is available, use it.\n    if (file.text) {\n        return file.text();\n    }\n    // Otherwise use the traditional file reading technique.\n    return _readFileLegacy(file);\n}\n\n/**\n * Reads the raw text from a file.\n *\n * @private\n * @param {File} file\n * @return {Promise<string>} A promise that resolves to the parsed string.\n */\nfunction _readFileLegacy(file: File): Promise<string> {\n    return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.addEventListener('loadend', (e) => {\n            const text = (e.srcElement as any || e.target).result;\n            resolve(text);\n        });\n        reader.readAsText(file);\n    });\n}\n\n/**\n * Writes the contents to disk.\n *\n * @param {FileSystemFileHandle} fileHandle File handle to write to.\n * @param {string} contents Contents to write.\n */\nexport async function writeFile(fileHandle: FileSystemFileHandle, contents: FileSystemWriteChunkType) {\n    // Support for Chrome 82 and earlier.\n    if ((fileHandle as any).createWriter) {\n        // Create a writer (request permission if necessary).\n        const writer = await (fileHandle as any).createWriter()\n        // Write the full length of the contents\n        await writer.write(0, contents)\n        // Close the file and write the contents to disk\n        await writer.close()\n        return\n    }\n    // For Chrome 83 and later.\n    // Create a FileSystemWritableFileStream to write to.\n    const writable = await fileHandle.createWritable()\n    // Write the contents of the file to the stream.\n    await writable.write(contents as any)\n    // Close the file and write the contents to disk.\n    await writable.close()\n}\n\n/**\n * Verify the user has granted permission to read or write to the file, if\n * permission hasn't been granted, request permission.\n *\n * @param fileHandle File handle to check.\n * @param withWrite True if write permission should be checked.\n * @return True if the user has granted read/write permission.\n */\nexport async function verifyPermission(fileHandle: FileSystemFileHandle, withWrite: boolean) {\n    const opts: any = {}\n    if (withWrite) {\n        opts.writable = true\n        // For Chrome 86 and later...\n        opts.mode = 'readwrite'\n    }\n    // Check if we already have permission, if so, return true.\n    if (await fileHandle.queryPermission(opts) === 'granted') {\n        return true\n    }\n    // Request permission to the file, if the user grants permission, return true.\n    if (await fileHandle.requestPermission(opts) === 'granted') {\n        return true\n    }\n    // The user did nt grant permission, return false.\n    return false\n}\n\n","/**\n * Convert an image {@link ImageBitmap} or {@link CanvasImageSource} to a new canvas with a max width. Good for resizing images keeping the aspect ratio and generating previews.\n * @param bitmap - image to convert\n * @param maxWidth - maximum width of the image (default: 8192). Images larger than this will be scaled down. This is because strings can get too long.\n * @param detachBitmap - detach the bitmap after conversion (default: false). This will free up bitmap memory if you don't need it anymore.\n *\n * See also {@link imageUrlToImageData}, {@link imageBitmapToBase64}, {@link imageBitmapToBlob}\n *\n * @category Images\n */\nexport function imageBitmapToCanvas(bitmap: ImageBitmap | CanvasImageSource | any, maxWidth = 8192, detachBitmap = false): HTMLCanvasElement {\n    if (!bitmap.width || !bitmap.height) throw new Error('Invalid bitmap')\n\n    // create a canvas\n    const canvas = document.createElement('canvas')\n    // resize it to the size of our ImageBitmap\n    canvas.width = Math.min(maxWidth, bitmap.width as number)\n    canvas.height = Math.floor(1.0 + canvas.width * (bitmap.height as number) / (bitmap.width as number))\n\n    // try to get a bitmaprenderer context if same size\n    const isBitmap = bitmap instanceof ImageBitmap\n    const ctx = isBitmap && detachBitmap && Math.abs(canvas.width - bitmap.width) < 0.5 ? canvas.getContext('bitmaprenderer') : undefined\n    if (ctx) {\n        // transfer the ImageBitmap to it\n        ctx.transferFromImageBitmap(bitmap as ImageBitmap) // less memory but it will detach the bitmap\n    } else {\n        // in case someone supports createImageBitmap only\n        // twice in memory...\n        canvas.getContext('2d')?.drawImage(bitmap, 0, 0, canvas.width, canvas.height)\n    }\n    if (isBitmap && detachBitmap) {\n        bitmap.close()\n    }\n    return canvas\n}\n\n/**\n * Convert an image {@link ImageBitmap} or {@link CanvasImageSource} to a base64 data url.\n * @param bitmap - image to convert\n * @param maxWidth - maximum width of the image (default: 8192). Images larger than this will be scaled down. This is because strings can get too long.\n * @param detachBitmap - detach the bitmap after conversion (default: false). This will free up bitmap memory if you don't need it anymore.\n * @param type - mime type of the data url (default: 'image/png')\n *\n * See also {@link imageUrlToImageData}, {@link imageBitmapToCanvas}, {@link imageBitmapToBlob}\n *\n * @category Images\n */\n// export function imageBitmapToBase64(bitmap: ImageBitmap | CanvasImageSource, maxWidth = 8192, detachBitmap = false, type = 'image/png'): string {\nexport function imageBitmapToBase64(bitmap: ImageBitmap | Exclude<CanvasImageSource,VideoFrame>, maxWidth = 8192, detachBitmap = false, type = 'image/png'): string {\n    if (!bitmap.width || !bitmap.height) return ''\n\n    // create a canvas\n    const canvas = imageBitmapToCanvas(bitmap, maxWidth, false)\n    // get it back as a Blob\n    const url = canvas.toDataURL(type)\n    canvas.remove()\n    if (detachBitmap && bitmap instanceof ImageBitmap) {\n        bitmap.close()\n    }\n    return url\n\n}\n\n\n/**\n * Convert an image {@link ImageBitmap} or {@link CanvasImageSource} to a blob.\n * @param bitmap - image to convert\n * @param maxWidth - maximum width of the image (default: 8192). Images larger than this will be scaled down. This is because strings can get too long.\n * @param detachBitmap - detach the bitmap after conversion (default: false). This will free up bitmap memory if you don't need it anymore.\n * @param type - mime type of the blob (default: 'image/png')\n *\n * See also {@link imageUrlToImageData}, {@link imageBitmapToCanvas}, {@link imageBitmapToBase64}\n *\n * @category Images\n */\n// export async function imageBitmapToBlob(bitmap: ImageBitmap | CanvasImageSource, maxWidth = 8192, detachBitmap = false, type = 'image/png'): Promise<Blob> {\nexport async function imageBitmapToBlob(bitmap: ImageBitmap | Exclude<CanvasImageSource,VideoFrame>, maxWidth = 8192, detachBitmap = false, type = 'image/png'): Promise<Blob> {\n    if (!bitmap.width || !bitmap.height) return Promise.reject('Invalid bitmap')\n\n    // create a canvas\n    const canvas = imageBitmapToCanvas(bitmap, maxWidth, false)\n    // get it back as a Blob\n    return new Promise<Blob>((resolve, reject) => {\n        canvas.toBlob((blob) => {\n            if (!blob) reject('Could not get blob')\n            else resolve(blob)\n            canvas.remove()\n            if (detachBitmap && bitmap instanceof ImageBitmap) {\n                bitmap.close()\n            }\n        }, type)\n    })\n}\n\n/**\n * Downloads/parse the image from an url/data url and draw to an {@link ImageData} object.\n * @param url - url or data url of the image\n * @returns ImageData object\n *\n * See also {@link imageBitmapToBase64}\n *\n * @category Images\n */\nexport async function imageUrlToImageData(url: string): Promise<ImageData> {\n    return new Promise<ImageData>((resolve, reject) => {\n        const image = new Image()\n        image.addEventListener('load', () => {\n            const canvas = document.createElement('canvas')\n            canvas.width = image.width\n            canvas.height = image.height\n            const context = canvas.getContext('2d')\n            if (!context) {\n                reject(new Error('Could not get 2d context'))\n                return\n            }\n            context.drawImage(image, 0, 0, canvas.width, canvas.height)\n            const imageData = context.getImageData(0, 0, canvas.width, canvas.height)\n            resolve(imageData)\n            // how do i return this?\n            canvas.remove()\n            image.remove()\n        }, false)\n        image.addEventListener('error', (e) => {\n            image.remove()\n            reject(e)\n        }, false)\n        image.src = url\n    })\n}\n\n/**\n * Options for {@link imageToCanvas}.\n */\nexport interface ImageCanvasOptions{\n    width: number,\n    height: number,\n    backgroundColor?: string,\n    scale?: number,\n}\n\n/**\n * Converts an HTML image to a canvas. This creates a new canvas element and draws the image on it.\n * @param image - image to convert\n * @param backgroundColor - background color of the canvas\n * @param scale - scale of the canvas\n * @param width - width of the canvas\n * @param height - height of the canvas\n * @returns a new canvas element\n *\n * @category Images\n */\nexport function imageToCanvas(image: HTMLImageElement, {\n    backgroundColor = '',\n    scale = 1,\n    width = 512,\n    height = 512,\n}: ImageCanvasOptions) {\n\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')!\n    const ratio = scale\n\n    const canvasWidth = width\n    const canvasHeight = height\n\n    canvas.width = canvasWidth * ratio\n    canvas.height = canvasHeight * ratio\n\n    canvas.style.width = `${canvasWidth}`\n    canvas.style.height = `${canvasHeight}`\n\n    if (backgroundColor?.length > 0) {\n        context.fillStyle = backgroundColor\n        context.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    context.drawImage(image, 0, 0, canvas.width, canvas.height)\n\n    return canvas\n}\n\n/**\n * Converts an {@link ImageData} to a canvas. This creates a new canvas element and draws the image data on it.\n * Image Data can be created from image pixels like from gl.readPixels\n * This can be used to convert a WebGL texture/render target to a canvas/data url.\n * Note: if the output is flipped, use {@link canvasFlipY} after this, like `canvasFlipY(imageDataToCanvas(imageData))`\n * @param data - image data to convert\n */\nexport function imageDataToCanvas(data: ImageData){\n    const canvas = document.createElement('canvas')\n    canvas.width = data.width\n    canvas.height = data.height\n    const context = canvas.getContext('2d')!\n    context.putImageData(data, 0, 0)\n    return canvas\n}\n\n\n/**\n * Check if the browser supports exporting to webp, with the canvas.toDataURL('image/webp') method.\n */\nexport function isWebpExportSupported() {\n    const elem = document.createElement('canvas')\n\n    if (elem.getContext && elem.getContext('2d')) {\n        // was able or not to get WebP representation\n        return elem.toDataURL('image/webp').startsWith('data:image/webp')\n    } else {\n        // very old browser like IE 8, canvas not supported\n        return false\n    }\n}\n\n/**\n * Returns a new canvas with the image/canvas-content flipped vertically.\n * Useful for putImageData(as it does not respect scale and translate) and WebGL textures, which are flipped vertically.\n * @param canvas\n */\n// export function canvasFlipY(canvas: Exclude<CanvasImageSource,SVGImageElement>): HTMLCanvasElement {\nexport function canvasFlipY(canvas: Exclude<CanvasImageSource,SVGImageElement|VideoFrame>): HTMLCanvasElement {\n    const newCanvas = document.createElement('canvas')\n    newCanvas.width = canvas.width\n    newCanvas.height = canvas.height\n    const ctx = newCanvas.getContext('2d')\n    if (!ctx) throw new Error('Unable to get 2d context')\n    ctx.translate(0, canvas.height)\n    ctx.scale(1, -1)\n    ctx.drawImage(canvas, 0, 0)\n    return newCanvas\n}\n\n/**\n * Load a Blob or a file containing an image and return an HTMLImageElement.\n * @param blob\n */\nexport function blobToImage(blob: Blob){\n    return new Promise<HTMLImageElement>((resolve, reject) => {\n        const img = new Image()\n        const url = URL.createObjectURL(blob)\n        img.onload = () => {\n            URL.revokeObjectURL(url)\n            resolve(img)\n        }\n        img.onerror = (e)=>{\n            URL.revokeObjectURL(url)\n            reject(e)\n        }\n        img.src = url\n    })\n}\n","import {ImageCanvasOptions, imageToCanvas} from \"./image\";\nimport {createImage} from \"./dom\";\n\n/**\n * Returns a data url for a 16x16 svg rectangle with the given color.\n * @param c - color\n *\n * @category SVGs\n */\nexport const makeColorSvg = (c: string): string => {\n    return `data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='16' height='16' fill='%23${c}'/%3E%3C/svg%3E%0A`\n}\n/**\n * Returns a data url for a 16x16 svg circle with the given color.\n * @param c - color\n *\n * @category SVGs\n */\nexport const makeColorSvgCircle = (c: string): string => {\n    return `data:image/svg+xml,%3Csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='8' cy='8' r='7' fill='%23${c}'/%3E%3C/svg%3E%0A`\n}\n\n/**\n * Returns a data url for a svg with the given text.\n * @param text\n *\n * @category SVGs\n */\nexport const makeTextSvg = (text: string): string => {\n    return `data:image/svg+xml,%3Csvg viewBox='0 0 80 14' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext style='font: 8px \"Roboto Mono\", \"Source Code Pro\", Menlo, Courier, monospace; fill: white;' x='9' y='9'%3E${text}%3C/text%3E%3C/svg%3E%0A`\n}\n\n/**\n * Renders an SVG to a canvas.\n * @param svgDataUrl - data url of the svg. Can be created with {@link svgUrl}\n * @param options - options\n *\n * @category SVGs\n */\nexport const svgToCanvas = async(svgDataUrl: string, options: ImageCanvasOptions): Promise<HTMLCanvasElement> => {\n    const image = await createImage(svgDataUrl)\n    return imageToCanvas(image, options)\n}\n\n/**\n * Renders an SVG to a png data url.\n * @param svgDataUrl - data url of the svg. Can be created with {@link svgUrl}\n * @param options - options\n *\n * @category SVGs\n */\nexport const svgToPng = async(svgDataUrl: string, options: ImageCanvasOptions): Promise<string> => {\n    return await svgToCanvas(svgDataUrl, options).then(canvas => canvas.toDataURL('image/png'))\n}\n","import {ImageCanvasOptions} from \"./image\";\nimport {svgToCanvas, svgToPng} from \"./svg\";\nimport {blobToDataURL} from \"./browser\";\nimport {svgUrl} from './template-literals'\n\nconst defaultDownloader = async(url: string) => blobToDataURL(await (await fetch(url)).blob())\n\n/**\n * Find all URLs in svg, download them and replace with the URL in svg with the downloaded data URLs.\n * @param str - string\n * @param downloader - function to download the URLs in svg and return the data URL\n *\n * @category HTML To Image\n */\nexport async function embedUrlRefs(str: string, downloader: (p: string) => Promise<string> = defaultDownloader) {\n    const urls = str.match(/(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)/g)\n    if (urls) {\n        for (const url of urls) {\n            const dataUrl = await downloader(url)\n            str = str.replace(url, dataUrl)\n        }\n    }\n    return str\n}\n\n/**\n * Embeds an HTML string into a svg tag and converts to svg string or svg as data url\n * @param html - HTML string\n * @param style - CSS string\n * @param width - width of the svg\n * @param height - height of the svg\n * @param toDataUrl - if true, returns a data url, otherwise returns the svg string\n * @returns svg string or svg as data url\n *\n * @category HTML To Image\n */\nexport function htmlToSvg(html: string, style: string, {width, height}: {width: number, height: number}, toDataUrl = true): string {\n    const s = `\n<svg viewBox=\"0 0 ${width} ${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n    <style>\n    ${style}\n    </style>\n    <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"height: 100%; width: 100%; position: absolute: top:0; left:0\">\n            ${html}\n        </div>\n    </foreignObject>\n</svg>\n    `\n    return toDataUrl ? svgUrl(s) : s\n}\n\n/**\n * Renders an HTML string to a canvas. This is done by first embedding HTML into a svg and then rendering the svg to a canvas.\n * @param html - HTML string\n * @param style - CSS string\n * @param options - options for rendering the canvas\n * @returns HTML canvas element\n *\n * @category HTML To Image\n */\nexport async function htmlToCanvas(html: string, style: string, options: ImageCanvasOptions): Promise<HTMLCanvasElement> {\n    const svg = htmlToSvg(html, style, options)\n    return await svgToCanvas(svg, options)\n}\n\n/**\n * Renders an HTML string to a png. This is done by first embedding HTML into a svg and then rendering the svg to a png.\n * @param html\n * @param style\n * @param options\n * @returns png as data url\n *\n * @category HTML To Image\n */\nexport async function htmlToPng(html: string, style: string, options: ImageCanvasOptions): Promise<string> {\n    const svg = htmlToSvg(html, style, options)\n    return await svgToPng(svg, options)\n}\n","/**\n * Returns the number which is larger in absolute value.\n * @param a\n * @param b\n *\n * @category Maths\n */\nexport function absMax(a: number, b: number): number {\n    return Math.abs(a) > Math.abs(b) ? a : b\n}\n\n/**\n * Updates the bit at the given position to the given value.\n * @param number - the number to update\n * @param bitPosition - the bit position to update from the least significant bit (0) to most significant bit (31)\n * @param bitValue - 0 or 1\n */\nexport function updateBit(number: number, bitPosition: number, bitValue: number): number {\n    const bitValueNormalized = bitValue ? 1 : 0\n    const clearMask = ~(1 << bitPosition)\n    return (number & clearMask) | (bitValueNormalized << bitPosition)\n}\n\n/**\n * Clears the bit at the given position.\n * @param number - the number to update\n * @param bitPosition - the bit position to update from the least significant bit (0) to most significant bit (31)\n */\nexport function clearBit(number: number, bitPosition: number): number {\n    const clearMask = ~(1 << bitPosition)\n    return number & clearMask\n}\n\n/**\n * Generate a UUID v4\n * https://stackoverflow.com/a/53723395/2229899\n */\nexport function uuidV4(){\n    const ho = (n: number, p: number) => n.toString(16).padStart(p, '0'); /// Return the hexadecimal text representation of number `n`, padded with zeroes to be of length `p`\n    const data = crypto.getRandomValues(new Uint8Array(16)); /// Fill the buffer with random data\n    data[6] = (data[6] & 0xf) | 0x40; /// Patch the 6th byte to reflect a version 4 UUID\n    data[8] = (data[8] & 0x3f) | 0x80; /// Patch the 8th byte to reflect a variant 1 UUID (version 4 UUIDs are)\n    const view = new DataView(data.buffer); /// Create a view backed by the 16-byte buffer\n    return `${ho(view.getUint32(0), 8)}-${ho(view.getUint16(4), 4)}-${ho(view.getUint16(6), 4)}-${ho(view.getUint16(8), 4)}-${ho(view.getUint32(10), 8)}${ho(view.getUint16(14), 4)}`; /// Compile the canonical textual form from the array data\n}\n","/**\n * Get URL query parameter. If not found, return default value. Similar to PHP's $_GET\n * @param p - parameter name to get\n * @param def - default value if parameter not found\n *\n * @category URL\n */\nexport function getUrlQueryParam(p: string, def: any = null) {\n    const url = new URL(window.location.href)\n    return url.searchParams.get(p) ?? def\n}\n\n/**\n * Set URL query parameter. If value is null, remove parameter. Similar to PHP's $_GET\n * @param p - parameter name to set\n * @param v - parameter value or null to remove\n * @param reload - reload page after setting parameter, default false. If false, `history.replaceState` is used.\n *\n * @category URL\n */\nexport function setUrlQueryParam(p: string, v: string|null, reload = false) { // pass v = null to remove\n    const params = new URLSearchParams(location.search)\n    if (v === null || v === undefined) {\n        if (params.has(p))\n            params.delete(p)\n    } else params.set(p, v)\n    if (!reload)\n        window.history.replaceState({}, '', '?' + params.toString()) // todo: check if default state and set to /\n    else\n        window.location.search = params.toString()\n}\n\n\n/**\n * Join path parts with separator. Similar to PHP's pathJoin\n * @param parts - path parts\n * @param separator - separator, default '/'\n */\nexport function pathJoin(parts: string[], separator: string = '/'): string {\n    // const replace = new RegExp(separator + '{1,}', 'g')\n    return parts.join(separator)// .replace(replace, separator) //todo fix: replace breaks https://raw to https:/raw\n}\n\n/**\n * Returns a blob:// URL which points to a javascript file which will call importScripts with the given URL, to be used for cross-origin workers.\n * https://stackoverflow.com/questions/21913673/execute-web-worker-from-different-origin\n * @param url - URL to the worker js file\n * @param wasmURL - optional wasm file URL, will be passed to a created Module.locateFile (for emscripten)\n */\nexport function remoteWorkerURL(url: string, wasmURL?: string) {\n    const content = (wasmURL ? `var Module = { locateFile: function(s) { return \"${ wasmURL }\"; } }; \\n` : '')\n        + `importScripts( \"${ url }\" );`\n    return URL.createObjectURL(new Blob([content], {type: 'text/javascript'}))\n}\n"],"names":["SimpleEventDispatcher","type","listener","listeners","listenerArray","index","event","array","i","l","timeout","duration","resolve","now","PointerDragHelper","x","y","time","value","_a","_b","_c","_d","_e","JSUndoManager","options","e","ctrlKey","command","last","command1","doFunction","p","exceedsBy","limit","redoable","msg","args","_Damper","decayMilliseconds","v","vGoal","timeStepMilliseconds","xNormalization","nilSpeed","deltaV","intermediateVelocity","intermediateX","decay","newVelocity","acceleration","Damper","createCanvasElement","canvas","createDiv","innerHTML","id","classList","addToBody","elementTag","elem","createImage","url","reject","img","createStyles","styles","root","styleSheet","createScriptFromURL","s","setInnerHTMLWithScripts","element","html","scripts","script","newScript","cloneScriptTag","err","j","attr","arrayBufferToBase64","buffer","binary","bytes","len","base64ToArrayBuffer","base64","binaryString","TYPED_ARRAYS","getTypedArray","toTitleCase","str","txt","toCamelCase","$1","parseFileExtension","path","basename","pos","getFilenameFromPath","escapeRegExp","replaceAll","find","replace","safeReplaceString","source","newStr","prepend","append","notFoundCallback","longestCommonPrefix","words","char","idx","glsl","strings","rest","css","svgUrl","encoded","prettyScrollbar","downloadBlob","b","name","a","blobToDataURL","blob","reader","downloadFile","uploadFile","multiple","directory","accept","input","files","mobileAndTabletCheck","check","SRGBToLinear","c","LinearToSRGB","colorToDataUrl","color","width","height","ctx","getPropertyDescriptor","obj","prop","desc","isPropertyWritable","object","allowWritable","allowAny","safeSetProperty","getOrCall","copyProps","dest","propList","includesAll","arr","subArr","sub","findLastIndex","predicate","wrapThisFunction","f1","f2","wrapThisFunction2","deepAccessObject","access","tar","throwOnInvalid","getKeyByValue","key","objectHasOwn","o","objectMap","fn","inPlace","result","keys","objectMap2","objSerializer","meta","k","Serialization","data","_Serialization","serializers","serializer","priority","isThis","res","Type","propKey","constructor","current","newVal","d","de","_FnCaller","params","methods","descp","FnCaller","onChange","fnKey","paramType","targetPrototype","propertyKey","descriptor","oldVal","onChange2","onChange3","onChangeDispatchEvent","eventName","oldValue","target","serialize","serializable","aesGcmEncrypt","content","password","prefix","pwUtf8","pwHash","iv","ivStr","alg","ptUint8","ctBuffer","ctUint","ctArray","ctStr","byte","prefixStr","prefixArray","aesGcmDecrypt","ciphertext","ch","ctUint8","plainBuffer","getFileHandle","handles","getNewFileHandle","opts","readFile","file","_readFileLegacy","text","writeFile","fileHandle","contents","writer","writable","verifyPermission","withWrite","imageBitmapToCanvas","bitmap","maxWidth","detachBitmap","isBitmap","imageBitmapToBase64","imageBitmapToBlob","imageUrlToImageData","image","context","imageData","imageToCanvas","backgroundColor","scale","ratio","canvasWidth","canvasHeight","imageDataToCanvas","isWebpExportSupported","canvasFlipY","newCanvas","blobToImage","makeColorSvg","makeColorSvgCircle","makeTextSvg","svgToCanvas","svgDataUrl","svgToPng","defaultDownloader","embedUrlRefs","downloader","urls","dataUrl","htmlToSvg","style","toDataUrl","htmlToCanvas","svg","htmlToPng","absMax","updateBit","number","bitPosition","bitValue","bitValueNormalized","clearMask","clearBit","uuidV4","ho","n","view","getUrlQueryParam","def","setUrlQueryParam","reload","pathJoin","parts","separator","remoteWorkerURL","wasmURL"],"mappings":"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"}