import { ThreeViewer } from '../../viewer';
import { ILoader, Importer } from '../../assetmanager';
import { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';
import { CompressedTexture } from 'three';
import { BaseImporterPlugin } from '../base/BaseImporterPlugin';
/**
 * Adds support for loading Compressed Textures of format `.ktx2`, `image/ktx2` files and data uris.
 * @category Plugins
 */
export declare class KTX2LoadPlugin extends BaseImporterPlugin {
    static readonly PluginType = "KTX2LoadPlugin";
    protected _importer: Importer<KTX2Loader2>;
    static TRANSCODER_LIBRARY_PATH: string;
    /**
     * Flag to save the source buffer data in the texture object, it can be used later when downloading/serializing
     * the texture like when downloading glb with embedded textures.
     */
    static SAVE_SOURCE_BLOBS: boolean;
    onAdded(viewer: ThreeViewer): void;
    onRemove(viewer: ThreeViewer): void;
}
export declare class KTX2Loader2 extends KTX2Loader implements ILoader {
    private _initTexture;
    createTexture(buffer: ArrayBuffer, config: any): Promise<CompressedTexture>;
}
export declare const KHR_TEXTURE_BASISU = "KHR_texture_basisu";
//# sourceMappingURL=KTX2LoadPlugin.d.ts.map