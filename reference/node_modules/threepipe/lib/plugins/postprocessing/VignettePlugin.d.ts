import { Color } from 'three';
import { AScreenPassExtensionPlugin } from './AScreenPassExtensionPlugin';
/**
 * Vignette Plugin
 *
 * Adds an extension to {@link ScreenPass} material
 * for applying vignette effect on the final buffer before rendering to screen.
 * The power of the vignette can be controlled with the `power` property.
 * The color of the vignette can be controlled with the `color`(previously `bgcolor`) property.
 *
 * @category Plugins
 */
export declare class VignettePlugin extends AScreenPassExtensionPlugin {
    static readonly PluginType = "Vignette";
    readonly extraUniforms: {
        readonly power: {
            readonly value: 1;
        };
        readonly bgcolor: {
            readonly value: Color;
        };
    };
    enabled: boolean;
    power: number;
    color: Color;
    /**
     * The priority of the material extension when applied to the material in ScreenPass
     * set to very low priority, so applied at the end
     */
    priority: number;
    parsFragmentSnippet: () => string;
    protected _shaderPatch: string;
    /**
     * @deprecated
     */
    get bgcolor(): Color;
    /**
     * @deprecated
     */
    set bgcolor(v: Color);
    constructor(enabled?: boolean);
}
//# sourceMappingURL=VignettePlugin.d.ts.map