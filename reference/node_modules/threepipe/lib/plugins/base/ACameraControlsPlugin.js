import { AViewerPluginSync } from '../../viewer';
export class ACameraControlsPlugin extends AViewerPluginSync {
    constructor() {
        super(...arguments);
        this.enabled = true;
        this.toJSON = undefined;
        this._cameraChanged = (e) => {
            e.lastCamera?.removeControlsCtor?.(this.controlsKey);
            e.camera?.setControlsCtor?.(this.controlsKey, this._controlsCtor);
        };
    }
    onAdded(viewer) {
        super.onAdded(viewer);
        // @ts-expect-error hack
        this._cameraChanged({ camera: viewer.scene.mainCamera, lastCamera: undefined });
        viewer.scene.addEventListener('mainCameraChange', this._cameraChanged);
    }
    onRemove(viewer) {
        // @ts-expect-error hack
        this._cameraChanged({ lastCamera: viewer.scene.mainCamera, camera: undefined });
        viewer.scene.removeEventListener('mainCameraChange', this._cameraChanged);
        super.onRemove(viewer);
    }
}
//# sourceMappingURL=ACameraControlsPlugin.js.map