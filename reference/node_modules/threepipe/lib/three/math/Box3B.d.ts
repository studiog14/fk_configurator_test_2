import { Box2, Box3, Camera, Object3D, Vector3 } from 'three';
import type { IObject3D } from '../../core';
export declare class Box3B extends Box3 {
    private static _box;
    private _vector;
    expandByObject(object: Object3D | IObject3D, precise?: boolean, ignoreInvisible?: boolean, ignoreObject?: (obj: Object3D) => boolean): this;
    expandByObjects(objects: (Object3D | IObject3D)[], precise?: boolean, ignoreInvisible?: boolean): this;
    /**
     * Get corner points.
     */
    getPoints(): Vector3[];
    getScreenSpaceBounds(camera: Camera): Box2;
}
//# sourceMappingURL=Box3B.d.ts.map