import { OrbitControls, OrbitControlsEventMap } from 'three/examples/jsm/controls/OrbitControls.js';
import { IUiConfigContainer, UiObjectConfig } from 'uiconfig.js';
import { ICameraControls } from '../../core';
import { Vector3 } from 'three';
export declare class OrbitControls3 extends OrbitControls implements IUiConfigContainer, ICameraControls<OrbitControlsEventMap> {
    uiConfig?: UiObjectConfig<void, 'panel'>;
    type: string;
    enabled: boolean;
    dollyZoom: boolean;
    zoomToCursor: boolean;
    enableDamping: boolean;
    dampingFactor: number;
    autoRotate: boolean;
    autoRotateSpeed: number;
    enableZoom: boolean;
    zoomSpeed: number;
    maxZoomSpeed: number;
    enableRotate: boolean;
    rotateSpeed: number;
    enablePan: boolean;
    panSpeed: number;
    autoPushTarget: boolean;
    autoPullTarget: boolean;
    minDistance: number;
    maxDistance: number;
    minZoom: number;
    maxZoom: number;
    minPolarAngle: number;
    maxPolarAngle: number;
    minAzimuthAngle: number;
    maxAzimuthAngle: number;
    clampMin: Vector3;
    clampMax: Vector3;
    screenSpacePanning: boolean;
    keyPanSpeed: number;
    throttleUpdate: number;
    stopDamping: () => void;
}
//# sourceMappingURL=OrbitControls3.d.ts.map