import { NormalBufferAttributes, NormalOrGLBufferAttributes } from 'three';
import { IGeometry, IGeometryEventMap, IGeometryUserData } from '../IGeometry';
import { LineGeometry } from 'three/examples/jsm/lines/LineGeometry';
import { IObject3D } from '../IObject';
export declare class LineGeometry2<Attributes extends NormalOrGLBufferAttributes = NormalBufferAttributes, TE extends IGeometryEventMap = IGeometryEventMap> extends LineGeometry<Attributes, TE> implements IGeometry<Attributes, TE> {
    assetType: 'geometry';
    center2: (this: IGeometry, offset?: import('three').Vector3, keepWorldPosition?: boolean, setDirty?: boolean) => () => void;
    setDirty: (this: IGeometry, options?: import('../IGeometry').IGeometrySetDirtyOptions) => void;
    refreshUi: (this: IGeometry) => void;
    appliedMeshes: Set<IObject3D<import('../IObject').IObject3DEventMap>>;
    userData: IGeometryUserData;
    constructor();
}
//# sourceMappingURL=LineGeometry2.d.ts.map