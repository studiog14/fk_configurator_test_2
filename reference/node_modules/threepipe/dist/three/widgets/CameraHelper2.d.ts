import { Camera, Color, Object3D, OrthographicCamera, PerspectiveCamera, Vector3 } from 'three';
import { ACameraHelperWidget } from './ACameraHelperWidget';
import { LineSegments2 } from 'three/examples/jsm/lines/LineSegments2.js';
/**
 * Fork of CameraHelper from three.js
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		https://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html
 */
export declare class CameraHelper2 extends ACameraHelperWidget {
    protected _vector: Vector3;
    protected _camera: Camera<import('three').Object3DEventMap>;
    line: LineSegments2;
    pointMap: Record<string, number[]>;
    constructor(camera: PerspectiveCamera | OrthographicCamera);
    setColors(frustum: Color, cone: Color, up: Color, target: Color, cross: Color): void;
    update(): void;
    dispose(): void;
    static Check(camera: Object3D): any;
    static Create(camera: Object3D): CameraHelper2;
}
//# sourceMappingURL=CameraHelper2.d.ts.map