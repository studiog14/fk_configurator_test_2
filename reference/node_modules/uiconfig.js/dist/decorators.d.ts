import type { ValOrFunc } from 'ts-browser-helpers';
import { UiObjectConfig } from './types';
export type TParams<T> = ValOrFunc<Partial<UiObjectConfig>, [T]>;
/**
 * Decorator for uiConfig
 * @param action - function that will be called with the targetPrototype, propertyKey and uiConfigs, and should modify the uiConfigs
 */
export declare function uiConfigDecorator(action: (targetPrototype: any, propertyKey: string | symbol, uiConfigs: any[]) => void): PropertyDecorator;
export declare function uiConfig<T = any>(uiType?: string, params?: Partial<UiObjectConfig> & {
    params?: TParams<T>;
    group?: string;
}): PropertyDecorator;
export declare function uiContainer<TP = any>(label: ValOrFunc<string, [TP]>, params?: any, type?: string): <T extends new (...args: any[]) => any>(constructor: T) => {
    new (...args: any[]): {
        [x: string]: any;
        uiConfig: UiObjectConfig<any, string, any>;
    };
} & T;
//# sourceMappingURL=decorators.d.ts.map