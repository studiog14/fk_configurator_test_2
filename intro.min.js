// 🎓 WŁASNY TUTORIAL SYSTEM
let currentTutorialStep = 0;
let tutorialOverlay = null;
let tutorialTooltip = null;

const tutorialSteps = [
    {
        selector: '#sidebar',
        title: 'Kategorie krzeseł',
        text: 'Wybierz kategorię lub konkretny model krzesła z listy po lewej stronie.',
        position: 'right'
    },
    {
        selector: '#model-thumbnails',
        title: 'Galeria modeli',
        text: 'Przeglądaj dostępne krzesła. Kliknij na krzesło aby je skonfigurować.',
        position: 'top'
    },
    {
        selector: '#canvas-container',
        title: 'Widok 3D',
        text: 'Obracaj model myszką, przybliżaj kółkiem. Zobacz krzesło z każdej strony.',
        position: 'left'
    },
    {
        selector: '#bottom-toolbar',
        title: 'Narzędzia',
        text: 'Zmień tło, zapisz widok lub eksportuj projekt. Wszystkie opcje znajdują się tutaj.',
        position: 'top'
    }
];

function startCustomTutorial() {
    if (localStorage.getItem('tutorial_completed') === 'true') {
        console.log('🎓 Tutorial już został ukończony');
        return;
    }
    
    currentTutorialStep = 0;
    createTutorialOverlay();
    showTutorialStep(0);
}

function createTutorialOverlay() {
    // Overlay (ciemne tło)
    tutorialOverlay = document.createElement('div');
    tutorialOverlay.id = 'tutorial-overlay';
    tutorialOverlay.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.7);
        z-index: 10000;
        pointer-events: none;
    `;
    document.body.appendChild(tutorialOverlay);
    
    // Tooltip
    tutorialTooltip = document.createElement('div');
    tutorialTooltip.id = 'tutorial-tooltip';
    tutorialTooltip.style.cssText = `
        position: fixed;
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.3);
        z-index: 10001;
        max-width: 300px;
        pointer-events: auto;
        font-family: 'Poppins', sans-serif;
    `;
    document.body.appendChild(tutorialTooltip);
}

function showTutorialStep(stepIndex) {
    if (stepIndex >= tutorialSteps.length) {
        completeTutorial();
        return;
    }
    
    const step = tutorialSteps[stepIndex];
    const targetElement = document.querySelector(step.selector);
    
    if (!targetElement) {
        console.warn('🎓 Nie znaleziono elementu:', step.selector);
        showTutorialStep(stepIndex + 1);
        return;
    }
    
    // Podświetl element
    highlightElement(targetElement);
    
    // Pozycjonuj tooltip
    positionTooltip(targetElement, step);
    
    // Wypełnij tooltip
    tutorialTooltip.innerHTML = `
        <h3 style="margin: 0 0 10px 0; color: #333; font-size: 18px;">${step.title}</h3>
        <p style="margin: 0 0 20px 0; color: #666; line-height: 1.4;">${step.text}</p>
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <span style="color: #999; font-size: 14px;">Krok ${stepIndex + 1} z ${tutorialSteps.length}</span>
            <div>
                ${stepIndex > 0 ? '<button onclick="previousTutorialStep()" style="margin-right: 10px; padding: 8px 16px; background: #f0f0f0; border: none; border-radius: 4px; cursor: pointer;">Wstecz</button>' : ''}
                <button onclick="nextTutorialStep()" style="padding: 8px 16px; background: #007AFF; color: white; border: none; border-radius: 4px; cursor: pointer;">
                    ${stepIndex === tutorialSteps.length - 1 ? 'Zakończ' : 'Dalej'}
                </button>
                <button onclick="skipTutorial()" style="margin-left: 10px; padding: 8px 16px; background: transparent; color: #999; border: 1px solid #ddd; border-radius: 4px; cursor: pointer;">Pomiń</button>
            </div>
        </div>
    `;
}

function highlightElement(element) {
    // Reset poprzedniego podświetlenia
    document.querySelectorAll('.tutorial-highlight').forEach(el => {
        el.classList.remove('tutorial-highlight');
    });
    
    // Dodaj podświetlenie
    element.classList.add('tutorial-highlight');
    
    // Dodaj style dla podświetlenia (jeśli nie ma)
    if (!document.getElementById('tutorial-styles')) {
        const style = document.createElement('style');
        style.id = 'tutorial-styles';
        style.textContent = `
            .tutorial-highlight {
                position: relative;
                z-index: 9999 !important;
                box-shadow: 0 0 0 4px rgba(0, 122, 255, 0.3), 0 0 0 2px #007AFF !important;
                border-radius: 8px !important;
            }
        `;
        document.head.appendChild(style);
    }
}

function positionTooltip(targetElement, step) {
    const rect = targetElement.getBoundingClientRect();
    const tooltipRect = tutorialTooltip.getBoundingClientRect();
    
    let top, left;
    
    switch(step.position) {
        case 'top':
            top = rect.top - tooltipRect.height - 20;
            left = rect.left + (rect.width - tooltipRect.width) / 2;
            break;
        case 'bottom':
            top = rect.bottom + 20;
            left = rect.left + (rect.width - tooltipRect.width) / 2;
            break;
        case 'left':
            top = rect.top + (rect.height - tooltipRect.height) / 2;
            left = rect.left - tooltipRect.width - 20;
            break;
        case 'right':
        default:
            top = rect.top + (rect.height - tooltipRect.height) / 2;
            left = rect.right + 20;
            break;
    }
    
    // Upewnij się że tooltip jest widoczny na ekranie
    top = Math.max(20, Math.min(top, window.innerHeight - tooltipRect.height - 20));
    left = Math.max(20, Math.min(left, window.innerWidth - tooltipRect.width - 20));
    
    tutorialTooltip.style.top = top + 'px';
    tutorialTooltip.style.left = left + 'px';
}

function nextTutorialStep() {
    currentTutorialStep++;
    showTutorialStep(currentTutorialStep);
}

function previousTutorialStep() {
    currentTutorialStep--;
    showTutorialStep(currentTutorialStep);
}

function skipTutorial() {
    if (confirm('Czy na pewno chcesz pominąć tutorial? Możesz go później włączyć z menu pomocy.')) {
        completeTutorial();
    }
}

function completeTutorial() {
    // Usuń overlay i tooltip
    if (tutorialOverlay) {
        tutorialOverlay.remove();
        tutorialOverlay = null;
    }
    if (tutorialTooltip) {
        tutorialTooltip.remove();
        tutorialTooltip = null;
    }
    
    // Usuń podświetlenia
    document.querySelectorAll('.tutorial-highlight').forEach(el => {
        el.classList.remove('tutorial-highlight');
    });
    
    // Zaznacz jako ukończony
    localStorage.setItem('tutorial_completed', 'true');
    console.log('🎓 Tutorial ukończony!');
}

// Simple Intro.js compatibility
window.introJs = function(selector) {
    console.log('🎯 Custom introJs called with selector:', selector);
    
    const intro = {
        setOptions: function(options) {
            console.log('🎯 Setting options:', options);
            return this;
        },
        start: function() {
            console.log('🎯 Starting tutorial');
            startCustomTutorial();
            return this;
        }
    };
    
    return intro;
};

// Funkcje dostępne globalnie
window.startCustomTutorial = startCustomTutorial;
window.nextTutorialStep = nextTutorialStep;
window.previousTutorialStep = previousTutorialStep;
window.skipTutorial = skipTutorial;
window.resetTutorial = function() {
    localStorage.removeItem('tutorial_completed');
    console.log('🎓 Tutorial zresetowany - uruchomi się przy następnym odświeżeniu');
};

console.log('🎯 Custom Tutorial System loaded successfully!');
