import { UiObjectConfig } from 'uiconfig.js';
import { IGeometry, IGeometrySetDirtyOptions } from '../IGeometry';
import { BufferGeometry, Vector3 } from 'three';
export declare const iGeometryCommons: {
    setDirty: (this: IGeometry, options?: IGeometrySetDirtyOptions) => void;
    refreshUi: (this: IGeometry) => void;
    dispose: (superDispose: BufferGeometry["dispose"]) => IGeometry["dispose"];
    clone: (superClone: BufferGeometry["clone"]) => IGeometry["clone"];
    upgradeGeometry: typeof upgradeGeometry;
    center: (superCenter: BufferGeometry["center"]) => IGeometry["center"];
    center2: (this: IGeometry, offset?: Vector3, keepWorldPosition?: boolean, setDirty?: boolean) => () => void;
    makeUiConfig: (this: IGeometry) => UiObjectConfig;
};
declare function upgradeGeometry(this: IGeometry): IGeometry<import("three").NormalBufferAttributes, import("three").BufferGeometryEventMap>;
export {};
//# sourceMappingURL=iGeometryCommons.d.ts.map