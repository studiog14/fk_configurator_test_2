import { ColorSpace, DataTexture, Texture, TextureImageData, TextureDataType, WebGLRenderer } from 'three';
export declare function getTextureDataType(renderer?: WebGLRenderer): TextureDataType;
export declare function textureDataToImageData(imgData: TextureImageData | ImageData | {
    data: Float32Array | Uint16Array | Uint8Array;
    width: number;
    height: number;
}, colorSpace?: ColorSpace, outData?: ImageData): ImageData;
/**
 *
 * @param texture
 * @param maxWidth
 * @param flipY
 * @param canvas
 */
export declare function textureToCanvas(texture: Texture | DataTexture, maxWidth: number, flipY?: boolean): HTMLCanvasElement;
export declare function texImageToCanvas(image: TexImageSource, maxWidth: number, flipY?: boolean): HTMLCanvasElement;
export declare function textureToDataUrl(texture: Texture | DataTexture, maxWidth: number, flipY: boolean, mimeType?: string, quality?: number): string;
export declare function textureToBlob(texture: Texture | DataTexture, maxWidth: number, flipY: boolean, mimeType?: string, quality?: number): Promise<Blob>;
//# sourceMappingURL=texture.d.ts.map