import { OrthographicCamera } from 'three';
import { BaseGroundPlugin } from '../base/BaseGroundPlugin';
import { ThreeViewer } from '../../viewer';
import { PhysicalMaterial } from '../../core';
export declare class ContactShadowGroundPlugin extends BaseGroundPlugin {
    static readonly PluginType = "ContactShadowGroundPlugin";
    contactShadows: boolean;
    shadowScale: number;
    shadowHeight: number;
    blurAmount: number;
    shadowCamera: OrthographicCamera<import('three').Object3DEventMap>;
    private _depthPass?;
    private _blurHelper?;
    constructor();
    onAdded(viewer: ThreeViewer): void;
    onRemove(viewer: ThreeViewer): void;
    protected _postFrame(): void;
    protected _preRender(): void;
    protected _refreshTransform(): boolean;
    private _refreshShadowCameraFrustum;
    private _setDirty;
    protected _removeMaterial(): void;
    refresh(): void;
    protected _createMaterial(material?: PhysicalMaterial): PhysicalMaterial;
    protected _refreshMaterial(): false | void;
}
//# sourceMappingURL=ContactShadowGroundPlugin.d.ts.map