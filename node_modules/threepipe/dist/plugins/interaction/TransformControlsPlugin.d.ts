import { AViewerPluginSync, ThreeViewer } from '../../viewer';
import { TransformControls2 } from '../../three';
import { PickingPlugin } from './PickingPlugin';
import { JSUndoManager } from 'ts-browser-helpers';
export declare class TransformControlsPlugin extends AViewerPluginSync {
    static readonly PluginType = "TransformControlsPlugin";
    enabled: boolean;
    private _pickingWidgetDisabled;
    setDirty(): void;
    constructor(enabled?: boolean);
    toJSON: any;
    dependencies: (typeof PickingPlugin)[];
    transformControls: TransformControls2 | undefined;
    protected _isInteracting: boolean;
    protected _viewerListeners: {
        postFrame: () => void;
    };
    private _transformState;
    undoManager?: JSUndoManager;
    onAdded(viewer: ThreeViewer): void;
    onRemove(viewer: ThreeViewer): void;
    private _mainCameraChange;
    centerAllMeshes(): (() => void) | undefined;
}
//# sourceMappingURL=TransformControlsPlugin.d.ts.map