import { Importer, Rhino3dmLoader2 } from '../../assetmanager';
import { BaseImporterPlugin } from '../base/BaseImporterPlugin';
import { IUiConfigContainer, UiObjectConfig } from 'uiconfig.js';
import { ThreeViewer } from '../../viewer';
/**
 * Adds support for loading Rhino `.3dm`, `model/vnd.3dm`, `model/3dm` files and data uris.
 * @category Plugins
 */
export declare class Rhino3dmLoadPlugin extends BaseImporterPlugin implements IUiConfigContainer {
    static readonly PluginType = "Rhino3dmLoadPlugin";
    protected _importer: Importer<Rhino3dmLoader2>;
    uiConfig: UiObjectConfig;
    /**
     * Import materials from the file based on material source and color source. If false, a default material will be used
     * Same as {@link Rhino3dmLoader2.ImportMaterials}
     */
    importMaterials: boolean;
    /**
     * Force layer materials even if material/color source is not from layer. Only works if {@link importMaterials} is true
     * Same as {@link Rhino3dmLoader2.ForceLayerMaterials}
     */
    forceLayerMaterials: boolean;
    /**
     * Replace meshes with instanced meshes if they have the same parent, geometry and material
     * Same as {@link Rhino3dmLoader2.ReplaceWithInstancedMesh}
     */
    replaceWithInstancedMesh: boolean;
    /**
     * Hide all lines, line segments and points in the file
     * Same as {@link Rhino3dmLoader2.HideLineMesh}
     */
    hideLineMesh: boolean;
    /**
     * Hide all points in the file
     */
    hidePointMesh: boolean;
    /**
     * Remove strings from userData
     */
    loadUserDataStrings: boolean;
    protected _refresh(): void;
    onAdded(viewer: ThreeViewer): void;
}
//# sourceMappingURL=Rhino3dmLoadPlugin.d.ts.map